{
  "version": 3,
  "sources": [
    "../../aidchain_contracts/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCQ;AAAoC;AAApC;AACA;;AAAwC;AAAxC;AACA;AAAoC;AAApC;AACA;;AAAmC;AAAnC;AACA;AAAqC;AAArC;AAGA;;AAAmC;AAAnC;AACA;;AAAuC;AAAvC;AACA;;AAAyC;AAAzC;AACA;;AAA8C;AAA9C;AAbR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAkUK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AAhTL;;;AAgTK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AA1SL;;;AA0SK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AApSL;;;AAoSK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AA9RL;;;AA8RK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAxRL;;;AAwRK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAhQL;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAgQK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AAhPL;;;AAAA;AAAA;;;AAAA;;;AAgPK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAvBA;;AAAA;AAAA;AAAA;;AAAA;AAzNL;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AAyNK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAxML;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;AAwMK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AApCA;;AAAA;AAAA;AAAA;;AAAA;AA7JL;;;AAAA;;;AAAA;;;AAAA;AA6JK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AAxIL;;;AAAA;AAAA;;;AAAA;;;AAwIK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAvHL;;;AAAA;;;AAAA;;;AAAA;;;AAuHK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AA/GL;;;AAAA;AAAA;;;AAAA;;;AA+GK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AA1GL;;;AAAA;AAAA;;;AAAA;AA0GK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AApFL;;;AAAA;AAoFK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAlBA;;AAAA;AAAA;AAAA;;AAAA;AAxDL;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAwDK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAvCL;;;AAAA;;;AAAA;;;AAAA;;;AAuCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AArBL;;;AAAA;;;AAqBK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AArBL;;AAAA;;;;;;;;;AAqBA;;;AAEe;;;;;;;;;AAAA;;AAAA;AAAP;AAKA;AAA8B;AAA9B;AACA;;AAAkC;AAAlC;AACA;AAA8B;AAA9B;AACA;;AAA6B;AAA7B;AACA;AAA+B;AAA/B;AACA;;AAA6B;AAA7B;AACA;;AAAiC;AAAjC;AACA;;AAAmC;AAAnC;AACA;;AAAwC;AAAxC;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP;AAER;;;AAGQ;AAAA;;AAAA;AAAA;AAAmC;AAAnC;AAAA;;AAAA;;AAAA;AAKO;AAAA;AACE;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACU;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAHsB;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAIlB;;AAJkB;AAAA;;AAAA;AAAA;AAAA;AAAzC;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAOA;AAAA;;AAAA;AAAA;AAAkC;AAAlC;AAAA;;AAAA;AAAA;AACA;AAER;;;AAGQ;AAAA;AAAA;AAAA;AAA+B;AAA/B;AAAA;AAAA;;AAAA;AAKO;AAAA;AACG;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACC;;AAAA;AAEC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAL8B;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAI/B;;AAJ+B;AAAA;AAAA;AAAA;;;AAAA;AAM/B;;AAN+B;AAAA;;AAAA;AAAA;AAAA;AAA1C;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AASA;AAKO;AAAA;AAAA;AAAA;AAAP;AAKO;AAAA;;AAAA;AAAA;AAAP;AAER;;;AAI8B;AAAA;AAAA;AAAA;AAAf;;AAAA;AAAP;AACA;;AAAA;AACO;;AAAA;AAA2B;;AAA3B;AAAA;AAAA;AAAA;;AAAP;AAOA;AAAA;;AAAA;AAAA;AAHkB;;;AAGlB;AAAA;;AAAA;AAAA;AAEO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP;AAKO;AAAA;;AAAA;AAAA;AAAP;AAER;;;AAGe;;AAAA;;AAAA;AAAP;AAER;;;AAGA;;AAAA;;;AACmB;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAP;AAEO;;;;;;;;;;;;;;;;;;;;;;;;;AAAP;AAEZ;;;AAGQ;AAAA;AAAA;AAAA;AAA+B;AAA/B;AAAA;AAAA;;AAAA;AAKO;AAAA;AACO;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAH8B;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAK9B;;AAL8B;AAAA;;AAAA;AAAA;AAAA;AAIjC;;;;AAJiC;AAA3C;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAQA;AAER;;;AAI8B;AAAA;AAAA;AAAA;AAAf;;AAAA;AAAP;AACA;;AAAA;AACO;;AAAA;AAA2B;;AAA3B;AAAA;AAAA;AAAA;AAAA;;AAAP;AAGgB;AAAA;AAAA;AACS;;AAAzB;;AACsB;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAtB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACA;;AAAA;;AAAA;AAEO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAP;AAOR;;;AAIqB;AAUL;;AAJI;;AACA;;;;;;;;;;AAFO;;;AADN;;;;;;;AAFC;;;;;;;;;;;;;;;AAFD;;;;;;AAAA;;;AAiBb;AAAA;;AAAA;AAAA;AAA8B;AAA9B;AAAA;;AAAA;;AAAA;AAKO;AACM;AAAA;AACJ;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACQ;;AAAA;AAJuB;;AAAA;;AAAA;AAAA;;;;AAAA;AAAA;AAAA;AAK7B;;AAL6B;AAAA;AAAA;AAAxC;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AASA;AASR;;;AAGwB;AAAA;;AAAA;AAAA;AAAb;;AAAA;AAAA;;;AAAA;;AAAA;;;AACQ;;;;;;;;;;;;;;;;;;;;AAAP;AAEZ;;AAAA;;;AACmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP;AAEG;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAP;AAQR;;;AAI8B;AAAA;AAAA;AAAA;AAAf;;AAAA;AAAP;AACA;;AAAA;AACO;;AAAA;AAA2B;;AAA3B;;AAAA;AAAA;AAAA;;AAAP;AAEA;AAAA;AAAA;AAAA;AAAgC;AAAhC;AAAA;AAAA;;AAAA;AAKO;AAAA;AAEW;;AAAA;AACF;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAJ4B;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;AAAA;AAK9B;;AAL8B;AAMzB;;AANyB;AAAA;AAAA;AAA5C;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AASA;AAER;;;AAI+B;AAAA;AAAA;AAAA;AAAhB;;AAAA;AAAP;AACA;;AAAA;AACO;;AAAA;AAA4B;;AAA5B;AAAA;AAAA;AAAA;AAAA;;AAAP;AAGiB;AAAA;AAAA;AACU;;AAA3B;;AACA;;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAAA;AAAyC;AAAzC;AAAA;;AAAA;AAAA;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAP;AAER;;;AAI+B;AAAA;AAAA;AAAA;AAAhB;;AAAA;AAAP;AACA;;AAAA;AACA;;AAAA;AAGA;AAGQ;;;;;;;;;;AAHR;;;;;AAAA;AAMO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP;AASR;;;AAG8B;;AAAf;;AAAA;AAAA;AAAA;AAAA;;AAAP;AACO;AAAA;AAAP;AAER;;;AAGyB;;AAAV;;AAAA;AAAA;AAAA;AAAA;;AAAP;AACO;AAAA;AAAP;AAER;;;AAG6B;;AAAd;;AAAA;AAAA;AAAA;AAAA;;AAAP;AACO;AAAA;AAAP;AAER;;;AAG+B;;AAAhB;;AAAA;AAAA;AAAA;AAAA;;AAAP;AACO;AAAA;AAAP;AAER;;;AAG8B;;AAAf;;AAAA;AAAA;AAAA;AAAA;;AAAP;AACO;AAAA;AAAP;AAOO;AAAA;AAAA;AAAA;AAAP;AAKO;AAAA;;AAAA;AAAA;AAAP;AAKO;AAAA;AAAA;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock 0x151f7c75 \"campaign_counter\" \"milestone_counter\" \"delivery_counter\" \"voucher_counter\" 0x0000000000000000 \"organization_counter\" \"total_donations\" \"total_organizations\" \"total_milestones_completed\" \"campaigns\" 0x0000000000000001 \"deliveries\" \"milestones\" \"total_vouchers_issued\" \"orgs\" \"vouchers\""
    },
    "250": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "252": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "255": {
      "op": "bytec_1 // \"campaign_counter\"",
      "defined_out": [
        "\"campaign_counter\""
      ],
      "stack_out": [
        "\"campaign_counter\""
      ]
    },
    "256": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"campaign_counter\"",
        "0"
      ],
      "stack_out": [
        "\"campaign_counter\"",
        "0"
      ]
    },
    "257": {
      "op": "app_global_put",
      "stack_out": []
    },
    "258": {
      "op": "bytec 6 // \"organization_counter\"",
      "defined_out": [
        "\"organization_counter\""
      ],
      "stack_out": [
        "\"organization_counter\""
      ]
    },
    "260": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"organization_counter\"",
        "0"
      ]
    },
    "261": {
      "op": "app_global_put",
      "stack_out": []
    },
    "262": {
      "op": "bytec_3 // \"delivery_counter\"",
      "defined_out": [
        "\"delivery_counter\""
      ],
      "stack_out": [
        "\"delivery_counter\""
      ]
    },
    "263": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"delivery_counter\"",
        "0"
      ]
    },
    "264": {
      "op": "app_global_put",
      "stack_out": []
    },
    "265": {
      "op": "bytec 4 // \"voucher_counter\"",
      "defined_out": [
        "\"voucher_counter\""
      ],
      "stack_out": [
        "\"voucher_counter\""
      ]
    },
    "267": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"voucher_counter\"",
        "0"
      ]
    },
    "268": {
      "op": "app_global_put",
      "stack_out": []
    },
    "269": {
      "op": "bytec_2 // \"milestone_counter\"",
      "defined_out": [
        "\"milestone_counter\""
      ],
      "stack_out": [
        "\"milestone_counter\""
      ]
    },
    "270": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"milestone_counter\"",
        "0"
      ]
    },
    "271": {
      "op": "app_global_put",
      "stack_out": []
    },
    "272": {
      "op": "bytec 7 // \"total_donations\"",
      "defined_out": [
        "\"total_donations\""
      ],
      "stack_out": [
        "\"total_donations\""
      ]
    },
    "274": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_donations\"",
        "0"
      ]
    },
    "275": {
      "op": "app_global_put",
      "stack_out": []
    },
    "276": {
      "op": "bytec 8 // \"total_organizations\"",
      "defined_out": [
        "\"total_organizations\""
      ],
      "stack_out": [
        "\"total_organizations\""
      ]
    },
    "278": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_organizations\"",
        "0"
      ]
    },
    "279": {
      "op": "app_global_put",
      "stack_out": []
    },
    "280": {
      "op": "bytec 14 // \"total_vouchers_issued\"",
      "defined_out": [
        "\"total_vouchers_issued\""
      ],
      "stack_out": [
        "\"total_vouchers_issued\""
      ]
    },
    "282": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_vouchers_issued\"",
        "0"
      ]
    },
    "283": {
      "op": "app_global_put",
      "stack_out": []
    },
    "284": {
      "op": "bytec 9 // \"total_milestones_completed\"",
      "defined_out": [
        "\"total_milestones_completed\""
      ],
      "stack_out": [
        "\"total_milestones_completed\""
      ]
    },
    "286": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_milestones_completed\"",
        "0"
      ]
    },
    "287": {
      "op": "app_global_put",
      "stack_out": []
    },
    "288": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "290": {
      "op": "bz main_bare_routing@34",
      "stack_out": []
    },
    "293": {
      "op": "pushbytess 0x02bece11 0x897ad1a7 0x11d3af19 0x4fe6fd56 0x13c105b9 0x14925212 0xff511553 0x9fd6c978 0xcdba1297 0x415f641e 0xc89dcb6b 0x8ea7e0fa 0x15699001 0xc8527bbf 0x8ab6a166 0x21c4a066 0xf64ae274 0x73248567 0x84eeae63 0xc3de9a52 0x06d414ca 0x5f52df5f 0xb44f7b03 0xbf0ee02d 0xbf54ed36 0xd5b20d70 0xf37cf9ed 0xbd7909b2 0x2d89c6a1 // method \"hello(string)string\", method \"initialize()string\", method \"register_organization(string,string)uint64\", method \"create_campaign(string,uint64,string)uint64\", method \"get_campaign_count()uint64\", method \"get_organization_count()uint64\", method \"create_donation(uint64)string\", method \"get_total_donations()uint64\", method \"calculate_total(uint64,uint64)uint64\", method \"validate_donation(uint64,string)string\", method \"log_delivery(string,string)uint64\", method \"verify_delivery(uint64,string)string\", method \"get_contract_stats()string\", method \"create_voucher_asset(string,uint64)uint64\", method \"distribute_vouchers(uint64,string,uint64)string\", method \"redeem_voucher(uint64,string,uint64)string\", method \"get_voucher_stats()string\", method \"create_milestone(uint64,uint64,string)uint64\", method \"complete_milestone(uint64,string)string\", method \"release_milestone_funds(uint64,account,uint64)string\", method \"get_milestone_stats()string\", method \"get_campaign_details(uint64)(uint64,string,uint64,uint64,string,uint64)\", method \"get_organization_details(uint64)(uint64,string,string,uint64)\", method \"get_voucher_details(uint64)(uint64,uint64,string,uint64,uint64)\", method \"get_milestone_details(uint64)(uint64,uint64,uint64,string,uint64,uint64)\", method \"get_delivery_details(uint64)(uint64,string,string,string,uint64)\", method \"get_milestone_count()uint64\", method \"get_voucher_count()uint64\", method \"get_delivery_count()uint64\"",
      "defined_out": [
        "Method(calculate_total(uint64,uint64)uint64)",
        "Method(complete_milestone(uint64,string)string)",
        "Method(create_campaign(string,uint64,string)uint64)",
        "Method(create_donation(uint64)string)",
        "Method(create_milestone(uint64,uint64,string)uint64)",
        "Method(create_voucher_asset(string,uint64)uint64)",
        "Method(distribute_vouchers(uint64,string,uint64)string)",
        "Method(get_campaign_count()uint64)",
        "Method(get_campaign_details(uint64)(uint64,string,uint64,uint64,string,uint64))",
        "Method(get_contract_stats()string)",
        "Method(get_delivery_count()uint64)",
        "Method(get_delivery_details(uint64)(uint64,string,string,string,uint64))",
        "Method(get_milestone_count()uint64)",
        "Method(get_milestone_details(uint64)(uint64,uint64,uint64,string,uint64,uint64))",
        "Method(get_milestone_stats()string)",
        "Method(get_organization_count()uint64)",
        "Method(get_organization_details(uint64)(uint64,string,string,uint64))",
        "Method(get_total_donations()uint64)",
        "Method(get_voucher_count()uint64)",
        "Method(get_voucher_details(uint64)(uint64,uint64,string,uint64,uint64))",
        "Method(get_voucher_stats()string)",
        "Method(hello(string)string)",
        "Method(initialize()string)",
        "Method(log_delivery(string,string)uint64)",
        "Method(redeem_voucher(uint64,string,uint64)string)",
        "Method(register_organization(string,string)uint64)",
        "Method(release_milestone_funds(uint64,account,uint64)string)",
        "Method(validate_donation(uint64,string)string)",
        "Method(verify_delivery(uint64,string)string)"
      ],
      "stack_out": [
        "Method(hello(string)string)",
        "Method(initialize()string)",
        "Method(register_organization(string,string)uint64)",
        "Method(create_campaign(string,uint64,string)uint64)",
        "Method(get_campaign_count()uint64)",
        "Method(get_organization_count()uint64)",
        "Method(create_donation(uint64)string)",
        "Method(get_total_donations()uint64)",
        "Method(calculate_total(uint64,uint64)uint64)",
        "Method(validate_donation(uint64,string)string)",
        "Method(log_delivery(string,string)uint64)",
        "Method(verify_delivery(uint64,string)string)",
        "Method(get_contract_stats()string)",
        "Method(create_voucher_asset(string,uint64)uint64)",
        "Method(distribute_vouchers(uint64,string,uint64)string)",
        "Method(redeem_voucher(uint64,string,uint64)string)",
        "Method(get_voucher_stats()string)",
        "Method(create_milestone(uint64,uint64,string)uint64)",
        "Method(complete_milestone(uint64,string)string)",
        "Method(release_milestone_funds(uint64,account,uint64)string)",
        "Method(get_milestone_stats()string)",
        "Method(get_campaign_details(uint64)(uint64,string,uint64,uint64,string,uint64))",
        "Method(get_organization_details(uint64)(uint64,string,string,uint64))",
        "Method(get_voucher_details(uint64)(uint64,uint64,string,uint64,uint64))",
        "Method(get_milestone_details(uint64)(uint64,uint64,uint64,string,uint64,uint64))",
        "Method(get_delivery_details(uint64)(uint64,string,string,string,uint64))",
        "Method(get_milestone_count()uint64)",
        "Method(get_voucher_count()uint64)",
        "Method(get_delivery_count()uint64)"
      ]
    },
    "440": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(calculate_total(uint64,uint64)uint64)",
        "Method(complete_milestone(uint64,string)string)",
        "Method(create_campaign(string,uint64,string)uint64)",
        "Method(create_donation(uint64)string)",
        "Method(create_milestone(uint64,uint64,string)uint64)",
        "Method(create_voucher_asset(string,uint64)uint64)",
        "Method(distribute_vouchers(uint64,string,uint64)string)",
        "Method(get_campaign_count()uint64)",
        "Method(get_campaign_details(uint64)(uint64,string,uint64,uint64,string,uint64))",
        "Method(get_contract_stats()string)",
        "Method(get_delivery_count()uint64)",
        "Method(get_delivery_details(uint64)(uint64,string,string,string,uint64))",
        "Method(get_milestone_count()uint64)",
        "Method(get_milestone_details(uint64)(uint64,uint64,uint64,string,uint64,uint64))",
        "Method(get_milestone_stats()string)",
        "Method(get_organization_count()uint64)",
        "Method(get_organization_details(uint64)(uint64,string,string,uint64))",
        "Method(get_total_donations()uint64)",
        "Method(get_voucher_count()uint64)",
        "Method(get_voucher_details(uint64)(uint64,uint64,string,uint64,uint64))",
        "Method(get_voucher_stats()string)",
        "Method(hello(string)string)",
        "Method(initialize()string)",
        "Method(log_delivery(string,string)uint64)",
        "Method(redeem_voucher(uint64,string,uint64)string)",
        "Method(register_organization(string,string)uint64)",
        "Method(release_milestone_funds(uint64,account,uint64)string)",
        "Method(validate_donation(uint64,string)string)",
        "Method(verify_delivery(uint64,string)string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(hello(string)string)",
        "Method(initialize()string)",
        "Method(register_organization(string,string)uint64)",
        "Method(create_campaign(string,uint64,string)uint64)",
        "Method(get_campaign_count()uint64)",
        "Method(get_organization_count()uint64)",
        "Method(create_donation(uint64)string)",
        "Method(get_total_donations()uint64)",
        "Method(calculate_total(uint64,uint64)uint64)",
        "Method(validate_donation(uint64,string)string)",
        "Method(log_delivery(string,string)uint64)",
        "Method(verify_delivery(uint64,string)string)",
        "Method(get_contract_stats()string)",
        "Method(create_voucher_asset(string,uint64)uint64)",
        "Method(distribute_vouchers(uint64,string,uint64)string)",
        "Method(redeem_voucher(uint64,string,uint64)string)",
        "Method(get_voucher_stats()string)",
        "Method(create_milestone(uint64,uint64,string)uint64)",
        "Method(complete_milestone(uint64,string)string)",
        "Method(release_milestone_funds(uint64,account,uint64)string)",
        "Method(get_milestone_stats()string)",
        "Method(get_campaign_details(uint64)(uint64,string,uint64,uint64,string,uint64))",
        "Method(get_organization_details(uint64)(uint64,string,string,uint64))",
        "Method(get_voucher_details(uint64)(uint64,uint64,string,uint64,uint64))",
        "Method(get_milestone_details(uint64)(uint64,uint64,uint64,string,uint64,uint64))",
        "Method(get_delivery_details(uint64)(uint64,string,string,string,uint64))",
        "Method(get_milestone_count()uint64)",
        "Method(get_voucher_count()uint64)",
        "Method(get_delivery_count()uint64)",
        "tmp%2#0"
      ]
    },
    "443": {
      "op": "match main_hello_route@5 main_initialize_route@6 main_register_organization_route@7 main_create_campaign_route@8 main_get_campaign_count_route@9 main_get_organization_count_route@10 main_create_donation_route@11 main_get_total_donations_route@12 main_calculate_total_route@13 main_validate_donation_route@14 main_log_delivery_route@15 main_verify_delivery_route@16 main_get_contract_stats_route@17 main_create_voucher_asset_route@18 main_distribute_vouchers_route@19 main_redeem_voucher_route@20 main_get_voucher_stats_route@21 main_create_milestone_route@22 main_complete_milestone_route@23 main_release_milestone_funds_route@24 main_get_milestone_stats_route@25 main_get_campaign_details_route@26 main_get_organization_details_route@27 main_get_voucher_details_route@28 main_get_milestone_details_route@29 main_get_delivery_details_route@30 main_get_milestone_count_route@31 main_get_voucher_count_route@32 main_get_delivery_count_route@33",
      "stack_out": []
    },
    "503": {
      "block": "main_after_if_else@36",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "504": {
      "op": "return",
      "stack_out": []
    },
    "505": {
      "block": "main_get_delivery_count_route@33",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%195#0"
      ],
      "stack_out": [
        "tmp%195#0"
      ]
    },
    "507": {
      "op": "!",
      "defined_out": [
        "tmp%196#0"
      ],
      "stack_out": [
        "tmp%196#0"
      ]
    },
    "508": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "509": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%197#0"
      ],
      "stack_out": [
        "tmp%197#0"
      ]
    },
    "511": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "512": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_delivery_count",
      "op": "callsub get_delivery_count",
      "defined_out": [
        "to_encode%22#0"
      ],
      "stack_out": [
        "to_encode%22#0"
      ]
    },
    "515": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%10#0"
      ],
      "stack_out": [
        "val_as_bytes%10#0"
      ]
    },
    "516": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%10#0"
      ],
      "stack_out": [
        "val_as_bytes%10#0",
        "0x151f7c75"
      ]
    },
    "517": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%10#0"
      ]
    },
    "518": {
      "op": "concat",
      "defined_out": [
        "tmp%199#0"
      ],
      "stack_out": [
        "tmp%199#0"
      ]
    },
    "519": {
      "op": "log",
      "stack_out": []
    },
    "520": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "521": {
      "op": "return",
      "stack_out": []
    },
    "522": {
      "block": "main_get_voucher_count_route@32",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%190#0"
      ],
      "stack_out": [
        "tmp%190#0"
      ]
    },
    "524": {
      "op": "!",
      "defined_out": [
        "tmp%191#0"
      ],
      "stack_out": [
        "tmp%191#0"
      ]
    },
    "525": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "526": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%192#0"
      ],
      "stack_out": [
        "tmp%192#0"
      ]
    },
    "528": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "529": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_voucher_count",
      "op": "callsub get_voucher_count",
      "defined_out": [
        "to_encode%21#0"
      ],
      "stack_out": [
        "to_encode%21#0"
      ]
    },
    "532": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "val_as_bytes%9#0"
      ]
    },
    "533": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "val_as_bytes%9#0",
        "0x151f7c75"
      ]
    },
    "534": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%9#0"
      ]
    },
    "535": {
      "op": "concat",
      "defined_out": [
        "tmp%194#0"
      ],
      "stack_out": [
        "tmp%194#0"
      ]
    },
    "536": {
      "op": "log",
      "stack_out": []
    },
    "537": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "538": {
      "op": "return",
      "stack_out": []
    },
    "539": {
      "block": "main_get_milestone_count_route@31",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%185#0"
      ],
      "stack_out": [
        "tmp%185#0"
      ]
    },
    "541": {
      "op": "!",
      "defined_out": [
        "tmp%186#0"
      ],
      "stack_out": [
        "tmp%186#0"
      ]
    },
    "542": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "543": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%187#0"
      ],
      "stack_out": [
        "tmp%187#0"
      ]
    },
    "545": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "546": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_milestone_count",
      "op": "callsub get_milestone_count",
      "defined_out": [
        "to_encode%20#0"
      ],
      "stack_out": [
        "to_encode%20#0"
      ]
    },
    "549": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "val_as_bytes%8#0"
      ]
    },
    "550": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "val_as_bytes%8#0",
        "0x151f7c75"
      ]
    },
    "551": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%8#0"
      ]
    },
    "552": {
      "op": "concat",
      "defined_out": [
        "tmp%189#0"
      ],
      "stack_out": [
        "tmp%189#0"
      ]
    },
    "553": {
      "op": "log",
      "stack_out": []
    },
    "554": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "555": {
      "op": "return",
      "stack_out": []
    },
    "556": {
      "block": "main_get_delivery_details_route@30",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%179#0"
      ],
      "stack_out": [
        "tmp%179#0"
      ]
    },
    "558": {
      "op": "!",
      "defined_out": [
        "tmp%180#0"
      ],
      "stack_out": [
        "tmp%180#0"
      ]
    },
    "559": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "560": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%181#0"
      ],
      "stack_out": [
        "tmp%181#0"
      ]
    },
    "562": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "563": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%20#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%20#0"
      ]
    },
    "566": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_delivery_details",
      "op": "callsub get_delivery_details",
      "defined_out": [
        "tmp%183#0"
      ],
      "stack_out": [
        "tmp%183#0"
      ]
    },
    "569": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%183#0"
      ],
      "stack_out": [
        "tmp%183#0",
        "0x151f7c75"
      ]
    },
    "570": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%183#0"
      ]
    },
    "571": {
      "op": "concat",
      "defined_out": [
        "tmp%184#0"
      ],
      "stack_out": [
        "tmp%184#0"
      ]
    },
    "572": {
      "op": "log",
      "stack_out": []
    },
    "573": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "574": {
      "op": "return",
      "stack_out": []
    },
    "575": {
      "block": "main_get_milestone_details_route@29",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%173#0"
      ],
      "stack_out": [
        "tmp%173#0"
      ]
    },
    "577": {
      "op": "!",
      "defined_out": [
        "tmp%174#0"
      ],
      "stack_out": [
        "tmp%174#0"
      ]
    },
    "578": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "579": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%175#0"
      ],
      "stack_out": [
        "tmp%175#0"
      ]
    },
    "581": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "582": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%19#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%19#0"
      ]
    },
    "585": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_milestone_details",
      "op": "callsub get_milestone_details",
      "defined_out": [
        "tmp%177#0"
      ],
      "stack_out": [
        "tmp%177#0"
      ]
    },
    "588": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%177#0"
      ],
      "stack_out": [
        "tmp%177#0",
        "0x151f7c75"
      ]
    },
    "589": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%177#0"
      ]
    },
    "590": {
      "op": "concat",
      "defined_out": [
        "tmp%178#0"
      ],
      "stack_out": [
        "tmp%178#0"
      ]
    },
    "591": {
      "op": "log",
      "stack_out": []
    },
    "592": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "593": {
      "op": "return",
      "stack_out": []
    },
    "594": {
      "block": "main_get_voucher_details_route@28",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%167#0"
      ],
      "stack_out": [
        "tmp%167#0"
      ]
    },
    "596": {
      "op": "!",
      "defined_out": [
        "tmp%168#0"
      ],
      "stack_out": [
        "tmp%168#0"
      ]
    },
    "597": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "598": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%169#0"
      ],
      "stack_out": [
        "tmp%169#0"
      ]
    },
    "600": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "601": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%18#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%18#0"
      ]
    },
    "604": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_voucher_details",
      "op": "callsub get_voucher_details",
      "defined_out": [
        "tmp%171#0"
      ],
      "stack_out": [
        "tmp%171#0"
      ]
    },
    "607": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%171#0"
      ],
      "stack_out": [
        "tmp%171#0",
        "0x151f7c75"
      ]
    },
    "608": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%171#0"
      ]
    },
    "609": {
      "op": "concat",
      "defined_out": [
        "tmp%172#0"
      ],
      "stack_out": [
        "tmp%172#0"
      ]
    },
    "610": {
      "op": "log",
      "stack_out": []
    },
    "611": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "612": {
      "op": "return",
      "stack_out": []
    },
    "613": {
      "block": "main_get_organization_details_route@27",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%161#0"
      ],
      "stack_out": [
        "tmp%161#0"
      ]
    },
    "615": {
      "op": "!",
      "defined_out": [
        "tmp%162#0"
      ],
      "stack_out": [
        "tmp%162#0"
      ]
    },
    "616": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "617": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%163#0"
      ],
      "stack_out": [
        "tmp%163#0"
      ]
    },
    "619": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "620": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%17#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%17#0"
      ]
    },
    "623": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_organization_details",
      "op": "callsub get_organization_details",
      "defined_out": [
        "tmp%165#0"
      ],
      "stack_out": [
        "tmp%165#0"
      ]
    },
    "626": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%165#0"
      ],
      "stack_out": [
        "tmp%165#0",
        "0x151f7c75"
      ]
    },
    "627": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%165#0"
      ]
    },
    "628": {
      "op": "concat",
      "defined_out": [
        "tmp%166#0"
      ],
      "stack_out": [
        "tmp%166#0"
      ]
    },
    "629": {
      "op": "log",
      "stack_out": []
    },
    "630": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "631": {
      "op": "return",
      "stack_out": []
    },
    "632": {
      "block": "main_get_campaign_details_route@26",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%155#0"
      ],
      "stack_out": [
        "tmp%155#0"
      ]
    },
    "634": {
      "op": "!",
      "defined_out": [
        "tmp%156#0"
      ],
      "stack_out": [
        "tmp%156#0"
      ]
    },
    "635": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "636": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%157#0"
      ]
    },
    "638": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "639": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%16#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%16#0"
      ]
    },
    "642": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_campaign_details",
      "op": "callsub get_campaign_details",
      "defined_out": [
        "tmp%159#0"
      ],
      "stack_out": [
        "tmp%159#0"
      ]
    },
    "645": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%159#0"
      ],
      "stack_out": [
        "tmp%159#0",
        "0x151f7c75"
      ]
    },
    "646": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%159#0"
      ]
    },
    "647": {
      "op": "concat",
      "defined_out": [
        "tmp%160#0"
      ],
      "stack_out": [
        "tmp%160#0"
      ]
    },
    "648": {
      "op": "log",
      "stack_out": []
    },
    "649": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "650": {
      "op": "return",
      "stack_out": []
    },
    "651": {
      "block": "main_get_milestone_stats_route@25",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%150#0"
      ]
    },
    "653": {
      "op": "!",
      "defined_out": [
        "tmp%151#0"
      ],
      "stack_out": [
        "tmp%151#0"
      ]
    },
    "654": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "655": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%152#0"
      ],
      "stack_out": [
        "tmp%152#0"
      ]
    },
    "657": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "658": {
      "op": "pushbytes 0x151f7c75001e4d696c6573746f6e65207374617469737469637320617661696c61626c65",
      "defined_out": [
        "0x151f7c75001e4d696c6573746f6e65207374617469737469637320617661696c61626c65"
      ],
      "stack_out": [
        "0x151f7c75001e4d696c6573746f6e65207374617469737469637320617661696c61626c65"
      ]
    },
    "696": {
      "op": "log",
      "stack_out": []
    },
    "697": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "698": {
      "op": "return",
      "stack_out": []
    },
    "699": {
      "block": "main_release_milestone_funds_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%141#0"
      ],
      "stack_out": [
        "tmp%141#0"
      ]
    },
    "701": {
      "op": "!",
      "defined_out": [
        "tmp%142#0"
      ],
      "stack_out": [
        "tmp%142#0"
      ]
    },
    "702": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "703": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%143#0"
      ],
      "stack_out": [
        "tmp%143#0"
      ]
    },
    "705": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "706": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%14#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%14#0"
      ]
    },
    "709": {
      "op": "btoi",
      "defined_out": [
        "tmp%145#0"
      ],
      "stack_out": [
        "tmp%145#0"
      ]
    },
    "710": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "tmp%145#0"
      ],
      "stack_out": [
        "tmp%145#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "713": {
      "op": "btoi",
      "defined_out": [
        "tmp%145#0",
        "tmp%146#0"
      ],
      "stack_out": [
        "tmp%145#0",
        "tmp%146#0"
      ]
    },
    "714": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%145#0",
        "tmp%147#0"
      ],
      "stack_out": [
        "tmp%145#0",
        "tmp%147#0"
      ]
    },
    "716": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%15#0",
        "tmp%145#0",
        "tmp%147#0"
      ],
      "stack_out": [
        "tmp%145#0",
        "tmp%147#0",
        "reinterpret_bytes[8]%15#0"
      ]
    },
    "719": {
      "op": "btoi",
      "defined_out": [
        "tmp%145#0",
        "tmp%147#0",
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%145#0",
        "tmp%147#0",
        "tmp%148#0"
      ]
    },
    "720": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.release_milestone_funds",
      "op": "callsub release_milestone_funds",
      "defined_out": [
        "to_encode%18#0"
      ],
      "stack_out": [
        "to_encode%18#0"
      ]
    },
    "723": {
      "op": "dup",
      "defined_out": [
        "to_encode%18#0",
        "to_encode%18#0 (copy)"
      ],
      "stack_out": [
        "to_encode%18#0",
        "to_encode%18#0 (copy)"
      ]
    },
    "724": {
      "op": "len",
      "defined_out": [
        "length%10#0",
        "to_encode%18#0"
      ],
      "stack_out": [
        "to_encode%18#0",
        "length%10#0"
      ]
    },
    "725": {
      "op": "itob",
      "defined_out": [
        "as_bytes%10#0",
        "to_encode%18#0"
      ],
      "stack_out": [
        "to_encode%18#0",
        "as_bytes%10#0"
      ]
    },
    "726": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%10#0",
        "to_encode%18#0"
      ],
      "stack_out": [
        "to_encode%18#0",
        "length_uint16%10#0"
      ]
    },
    "729": {
      "op": "swap",
      "stack_out": [
        "length_uint16%10#0",
        "to_encode%18#0"
      ]
    },
    "730": {
      "op": "concat",
      "defined_out": [
        "encoded_value%10#0"
      ],
      "stack_out": [
        "encoded_value%10#0"
      ]
    },
    "731": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%10#0"
      ],
      "stack_out": [
        "encoded_value%10#0",
        "0x151f7c75"
      ]
    },
    "732": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%10#0"
      ]
    },
    "733": {
      "op": "concat",
      "defined_out": [
        "tmp%149#0"
      ],
      "stack_out": [
        "tmp%149#0"
      ]
    },
    "734": {
      "op": "log",
      "stack_out": []
    },
    "735": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "736": {
      "op": "return",
      "stack_out": []
    },
    "737": {
      "block": "main_complete_milestone_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%133#0"
      ],
      "stack_out": [
        "tmp%133#0"
      ]
    },
    "739": {
      "op": "!",
      "defined_out": [
        "tmp%134#0"
      ],
      "stack_out": [
        "tmp%134#0"
      ]
    },
    "740": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "741": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%135#0"
      ],
      "stack_out": [
        "tmp%135#0"
      ]
    },
    "743": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "744": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%13#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%13#0"
      ]
    },
    "747": {
      "op": "btoi",
      "defined_out": [
        "tmp%137#0"
      ],
      "stack_out": [
        "tmp%137#0"
      ]
    },
    "748": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%137#0",
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%137#0",
        "tmp%138#0"
      ]
    },
    "751": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%137#0",
        "tmp%139#0"
      ],
      "stack_out": [
        "tmp%137#0",
        "tmp%139#0"
      ]
    },
    "754": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.complete_milestone",
      "op": "callsub complete_milestone",
      "defined_out": [
        "to_encode%17#0"
      ],
      "stack_out": [
        "to_encode%17#0"
      ]
    },
    "757": {
      "op": "dup",
      "defined_out": [
        "to_encode%17#0",
        "to_encode%17#0 (copy)"
      ],
      "stack_out": [
        "to_encode%17#0",
        "to_encode%17#0 (copy)"
      ]
    },
    "758": {
      "op": "len",
      "defined_out": [
        "length%9#0",
        "to_encode%17#0"
      ],
      "stack_out": [
        "to_encode%17#0",
        "length%9#0"
      ]
    },
    "759": {
      "op": "itob",
      "defined_out": [
        "as_bytes%9#0",
        "to_encode%17#0"
      ],
      "stack_out": [
        "to_encode%17#0",
        "as_bytes%9#0"
      ]
    },
    "760": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%9#0",
        "to_encode%17#0"
      ],
      "stack_out": [
        "to_encode%17#0",
        "length_uint16%9#0"
      ]
    },
    "763": {
      "op": "swap",
      "stack_out": [
        "length_uint16%9#0",
        "to_encode%17#0"
      ]
    },
    "764": {
      "op": "concat",
      "defined_out": [
        "encoded_value%9#0"
      ],
      "stack_out": [
        "encoded_value%9#0"
      ]
    },
    "765": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%9#0"
      ],
      "stack_out": [
        "encoded_value%9#0",
        "0x151f7c75"
      ]
    },
    "766": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%9#0"
      ]
    },
    "767": {
      "op": "concat",
      "defined_out": [
        "tmp%140#0"
      ],
      "stack_out": [
        "tmp%140#0"
      ]
    },
    "768": {
      "op": "log",
      "stack_out": []
    },
    "769": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "770": {
      "op": "return",
      "stack_out": []
    },
    "771": {
      "block": "main_create_milestone_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0"
      ]
    },
    "773": {
      "op": "!",
      "defined_out": [
        "tmp%125#0"
      ],
      "stack_out": [
        "tmp%125#0"
      ]
    },
    "774": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "775": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%126#0"
      ],
      "stack_out": [
        "tmp%126#0"
      ]
    },
    "777": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "778": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%11#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%11#0"
      ]
    },
    "781": {
      "op": "btoi",
      "defined_out": [
        "tmp%128#0"
      ],
      "stack_out": [
        "tmp%128#0"
      ]
    },
    "782": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%12#0",
        "tmp%128#0"
      ],
      "stack_out": [
        "tmp%128#0",
        "reinterpret_bytes[8]%12#0"
      ]
    },
    "785": {
      "op": "btoi",
      "defined_out": [
        "tmp%128#0",
        "tmp%129#0"
      ],
      "stack_out": [
        "tmp%128#0",
        "tmp%129#0"
      ]
    },
    "786": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%128#0",
        "tmp%129#0",
        "tmp%130#0"
      ],
      "stack_out": [
        "tmp%128#0",
        "tmp%129#0",
        "tmp%130#0"
      ]
    },
    "789": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%128#0",
        "tmp%129#0",
        "tmp%131#0"
      ],
      "stack_out": [
        "tmp%128#0",
        "tmp%129#0",
        "tmp%131#0"
      ]
    },
    "792": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.create_milestone",
      "op": "callsub create_milestone",
      "defined_out": [
        "to_encode%16#0"
      ],
      "stack_out": [
        "to_encode%16#0"
      ]
    },
    "795": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "val_as_bytes%7#0"
      ]
    },
    "796": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "val_as_bytes%7#0",
        "0x151f7c75"
      ]
    },
    "797": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%7#0"
      ]
    },
    "798": {
      "op": "concat",
      "defined_out": [
        "tmp%132#0"
      ],
      "stack_out": [
        "tmp%132#0"
      ]
    },
    "799": {
      "op": "log",
      "stack_out": []
    },
    "800": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "801": {
      "op": "return",
      "stack_out": []
    },
    "802": {
      "block": "main_get_voucher_stats_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%119#0"
      ],
      "stack_out": [
        "tmp%119#0"
      ]
    },
    "804": {
      "op": "!",
      "defined_out": [
        "tmp%120#0"
      ],
      "stack_out": [
        "tmp%120#0"
      ]
    },
    "805": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "806": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0"
      ]
    },
    "808": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "809": {
      "op": "pushbytes 0x151f7c75001c566f7563686572207374617469737469637320617661696c61626c65",
      "defined_out": [
        "0x151f7c75001c566f7563686572207374617469737469637320617661696c61626c65"
      ],
      "stack_out": [
        "0x151f7c75001c566f7563686572207374617469737469637320617661696c61626c65"
      ]
    },
    "845": {
      "op": "log",
      "stack_out": []
    },
    "846": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "847": {
      "op": "return",
      "stack_out": []
    },
    "848": {
      "block": "main_redeem_voucher_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%110#0"
      ]
    },
    "850": {
      "op": "!",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "851": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "852": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "854": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "855": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "858": {
      "op": "btoi",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "859": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%114#0",
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%114#0",
        "tmp%115#0"
      ]
    },
    "862": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%114#0",
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%114#0",
        "tmp%116#0"
      ]
    },
    "865": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%10#0",
        "tmp%114#0",
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%114#0",
        "tmp%116#0",
        "reinterpret_bytes[8]%10#0"
      ]
    },
    "868": {
      "op": "btoi",
      "defined_out": [
        "tmp%114#0",
        "tmp%116#0",
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%114#0",
        "tmp%116#0",
        "tmp%117#0"
      ]
    },
    "869": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.redeem_voucher",
      "op": "callsub redeem_voucher",
      "defined_out": [
        "to_encode%14#0"
      ],
      "stack_out": [
        "to_encode%14#0"
      ]
    },
    "872": {
      "op": "dup",
      "defined_out": [
        "to_encode%14#0",
        "to_encode%14#0 (copy)"
      ],
      "stack_out": [
        "to_encode%14#0",
        "to_encode%14#0 (copy)"
      ]
    },
    "873": {
      "op": "len",
      "defined_out": [
        "length%7#0",
        "to_encode%14#0"
      ],
      "stack_out": [
        "to_encode%14#0",
        "length%7#0"
      ]
    },
    "874": {
      "op": "itob",
      "defined_out": [
        "as_bytes%7#0",
        "to_encode%14#0"
      ],
      "stack_out": [
        "to_encode%14#0",
        "as_bytes%7#0"
      ]
    },
    "875": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%7#0",
        "to_encode%14#0"
      ],
      "stack_out": [
        "to_encode%14#0",
        "length_uint16%7#0"
      ]
    },
    "878": {
      "op": "swap",
      "stack_out": [
        "length_uint16%7#0",
        "to_encode%14#0"
      ]
    },
    "879": {
      "op": "concat",
      "defined_out": [
        "encoded_value%7#0"
      ],
      "stack_out": [
        "encoded_value%7#0"
      ]
    },
    "880": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%7#0"
      ],
      "stack_out": [
        "encoded_value%7#0",
        "0x151f7c75"
      ]
    },
    "881": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%7#0"
      ]
    },
    "882": {
      "op": "concat",
      "defined_out": [
        "tmp%118#0"
      ],
      "stack_out": [
        "tmp%118#0"
      ]
    },
    "883": {
      "op": "log",
      "stack_out": []
    },
    "884": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "885": {
      "op": "return",
      "stack_out": []
    },
    "886": {
      "block": "main_distribute_vouchers_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "888": {
      "op": "!",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "889": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "890": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "892": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "893": {
      "op": "pushbytes 0x151f7c7500204465627567206d6f64653a20766f756368657273206469737472696275746564",
      "defined_out": [
        "0x151f7c7500204465627567206d6f64653a20766f756368657273206469737472696275746564"
      ],
      "stack_out": [
        "0x151f7c7500204465627567206d6f64653a20766f756368657273206469737472696275746564"
      ]
    },
    "933": {
      "op": "log",
      "stack_out": []
    },
    "934": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "935": {
      "op": "return",
      "stack_out": []
    },
    "936": {
      "block": "main_create_voucher_asset_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "938": {
      "op": "!",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "939": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "940": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "942": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "943": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "946": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "949": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%6#0",
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0",
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "952": {
      "op": "btoi",
      "defined_out": [
        "tmp%97#0",
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%97#0",
        "tmp%98#0"
      ]
    },
    "953": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.create_voucher_asset",
      "op": "callsub create_voucher_asset",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "956": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0",
        "0x151f7c75"
      ]
    },
    "957": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%99#0"
      ]
    },
    "958": {
      "op": "concat",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "959": {
      "op": "log",
      "stack_out": []
    },
    "960": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "961": {
      "op": "return",
      "stack_out": []
    },
    "962": {
      "block": "main_get_contract_stats_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "964": {
      "op": "!",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "965": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "966": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "968": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "969": {
      "op": "pushbytes 0x151f7c75001d436f6e7472616374207374617469737469637320617661696c61626c65",
      "defined_out": [
        "0x151f7c75001d436f6e7472616374207374617469737469637320617661696c61626c65"
      ],
      "stack_out": [
        "0x151f7c75001d436f6e7472616374207374617469737469637320617661696c61626c65"
      ]
    },
    "1006": {
      "op": "log",
      "stack_out": []
    },
    "1007": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1008": {
      "op": "return",
      "stack_out": []
    },
    "1009": {
      "block": "main_verify_delivery_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "1011": {
      "op": "!",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "1012": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1013": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "1015": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1016": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "1019": {
      "op": "btoi",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "1020": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%83#0",
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%83#0",
        "tmp%84#0"
      ]
    },
    "1023": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%83#0",
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%83#0",
        "tmp%85#0"
      ]
    },
    "1026": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.verify_delivery",
      "op": "callsub verify_delivery",
      "defined_out": [
        "to_encode%11#0"
      ],
      "stack_out": [
        "to_encode%11#0"
      ]
    },
    "1029": {
      "op": "dup",
      "defined_out": [
        "to_encode%11#0",
        "to_encode%11#0 (copy)"
      ],
      "stack_out": [
        "to_encode%11#0",
        "to_encode%11#0 (copy)"
      ]
    },
    "1030": {
      "op": "len",
      "defined_out": [
        "length%4#0",
        "to_encode%11#0"
      ],
      "stack_out": [
        "to_encode%11#0",
        "length%4#0"
      ]
    },
    "1031": {
      "op": "itob",
      "defined_out": [
        "as_bytes%4#0",
        "to_encode%11#0"
      ],
      "stack_out": [
        "to_encode%11#0",
        "as_bytes%4#0"
      ]
    },
    "1032": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%4#0",
        "to_encode%11#0"
      ],
      "stack_out": [
        "to_encode%11#0",
        "length_uint16%4#0"
      ]
    },
    "1035": {
      "op": "swap",
      "stack_out": [
        "length_uint16%4#0",
        "to_encode%11#0"
      ]
    },
    "1036": {
      "op": "concat",
      "defined_out": [
        "encoded_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0"
      ]
    },
    "1037": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "0x151f7c75"
      ]
    },
    "1038": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%4#0"
      ]
    },
    "1039": {
      "op": "concat",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "1040": {
      "op": "log",
      "stack_out": []
    },
    "1041": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1042": {
      "op": "return",
      "stack_out": []
    },
    "1043": {
      "block": "main_log_delivery_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "1045": {
      "op": "!",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "1046": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1047": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "1049": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1050": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "1053": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "1056": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%75#0",
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%75#0",
        "tmp%76#0"
      ]
    },
    "1059": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%75#0",
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%75#0",
        "tmp%77#0"
      ]
    },
    "1062": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.log_delivery",
      "op": "callsub log_delivery",
      "defined_out": [
        "to_encode%10#0"
      ],
      "stack_out": [
        "to_encode%10#0"
      ]
    },
    "1065": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "val_as_bytes%6#0"
      ]
    },
    "1066": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "val_as_bytes%6#0",
        "0x151f7c75"
      ]
    },
    "1067": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%6#0"
      ]
    },
    "1068": {
      "op": "concat",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "1069": {
      "op": "log",
      "stack_out": []
    },
    "1070": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1071": {
      "op": "return",
      "stack_out": []
    },
    "1072": {
      "block": "main_validate_donation_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "1074": {
      "op": "!",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "1075": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1076": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "1078": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1079": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "1082": {
      "op": "btoi",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "1083": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "tmp%67#0"
      ]
    },
    "1086": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%66#0",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "tmp%68#0"
      ]
    },
    "1089": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.validate_donation",
      "op": "callsub validate_donation",
      "defined_out": [
        "to_encode%9#0"
      ],
      "stack_out": [
        "to_encode%9#0"
      ]
    },
    "1092": {
      "op": "dup",
      "defined_out": [
        "to_encode%9#0",
        "to_encode%9#0 (copy)"
      ],
      "stack_out": [
        "to_encode%9#0",
        "to_encode%9#0 (copy)"
      ]
    },
    "1093": {
      "op": "len",
      "defined_out": [
        "length%3#0",
        "to_encode%9#0"
      ],
      "stack_out": [
        "to_encode%9#0",
        "length%3#0"
      ]
    },
    "1094": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "to_encode%9#0"
      ],
      "stack_out": [
        "to_encode%9#0",
        "as_bytes%3#0"
      ]
    },
    "1095": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%3#0",
        "to_encode%9#0"
      ],
      "stack_out": [
        "to_encode%9#0",
        "length_uint16%3#0"
      ]
    },
    "1098": {
      "op": "swap",
      "stack_out": [
        "length_uint16%3#0",
        "to_encode%9#0"
      ]
    },
    "1099": {
      "op": "concat",
      "defined_out": [
        "encoded_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0"
      ]
    },
    "1100": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "0x151f7c75"
      ]
    },
    "1101": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%3#0"
      ]
    },
    "1102": {
      "op": "concat",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "1103": {
      "op": "log",
      "stack_out": []
    },
    "1104": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1105": {
      "op": "return",
      "stack_out": []
    },
    "1106": {
      "block": "main_calculate_total_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "1108": {
      "op": "!",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "1109": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1110": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "1112": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1113": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "1116": {
      "op": "btoi",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "1117": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%3#0",
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "1120": {
      "op": "btoi",
      "defined_out": [
        "tmp%59#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%59#0",
        "tmp%60#0"
      ]
    },
    "1121": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.calculate_total",
      "op": "callsub calculate_total",
      "defined_out": [
        "to_encode%8#0"
      ],
      "stack_out": [
        "to_encode%8#0"
      ]
    },
    "1124": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0"
      ]
    },
    "1125": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0",
        "0x151f7c75"
      ]
    },
    "1126": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%5#0"
      ]
    },
    "1127": {
      "op": "concat",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "1128": {
      "op": "log",
      "stack_out": []
    },
    "1129": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1130": {
      "op": "return",
      "stack_out": []
    },
    "1131": {
      "block": "main_get_total_donations_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "1133": {
      "op": "!",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "1134": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1135": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "1137": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1138": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_total_donations",
      "op": "callsub get_total_donations",
      "defined_out": [
        "to_encode%7#0"
      ],
      "stack_out": [
        "to_encode%7#0"
      ]
    },
    "1141": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0"
      ]
    },
    "1142": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "0x151f7c75"
      ]
    },
    "1143": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ]
    },
    "1144": {
      "op": "concat",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "1145": {
      "op": "log",
      "stack_out": []
    },
    "1146": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1147": {
      "op": "return",
      "stack_out": []
    },
    "1148": {
      "block": "main_create_donation_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "1150": {
      "op": "!",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "1151": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1152": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "1154": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1155": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "1158": {
      "op": "btoi",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "1159": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.create_donation",
      "op": "callsub create_donation",
      "defined_out": [
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0"
      ]
    },
    "1162": {
      "op": "dup",
      "defined_out": [
        "to_encode%6#0",
        "to_encode%6#0 (copy)"
      ],
      "stack_out": [
        "to_encode%6#0",
        "to_encode%6#0 (copy)"
      ]
    },
    "1163": {
      "op": "len",
      "defined_out": [
        "length%2#0",
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0",
        "length%2#0"
      ]
    },
    "1164": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0",
        "as_bytes%2#0"
      ]
    },
    "1165": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%2#0",
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0",
        "length_uint16%2#0"
      ]
    },
    "1168": {
      "op": "swap",
      "stack_out": [
        "length_uint16%2#0",
        "to_encode%6#0"
      ]
    },
    "1169": {
      "op": "concat",
      "defined_out": [
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0"
      ]
    },
    "1170": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "0x151f7c75"
      ]
    },
    "1171": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%2#0"
      ]
    },
    "1172": {
      "op": "concat",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "1173": {
      "op": "log",
      "stack_out": []
    },
    "1174": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1175": {
      "op": "return",
      "stack_out": []
    },
    "1176": {
      "block": "main_get_organization_count_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "1178": {
      "op": "!",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "1179": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1180": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "1182": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1183": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_organization_count",
      "op": "callsub get_organization_count",
      "defined_out": [
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0"
      ]
    },
    "1186": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0"
      ]
    },
    "1187": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "0x151f7c75"
      ]
    },
    "1188": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%3#0"
      ]
    },
    "1189": {
      "op": "concat",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "1190": {
      "op": "log",
      "stack_out": []
    },
    "1191": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1192": {
      "op": "return",
      "stack_out": []
    },
    "1193": {
      "block": "main_get_campaign_count_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "1195": {
      "op": "!",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "1196": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1197": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "1199": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1200": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_campaign_count",
      "op": "callsub get_campaign_count",
      "defined_out": [
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0"
      ]
    },
    "1203": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "1204": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "1205": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "1206": {
      "op": "concat",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "1207": {
      "op": "log",
      "stack_out": []
    },
    "1208": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1209": {
      "op": "return",
      "stack_out": []
    },
    "1210": {
      "block": "main_create_campaign_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "1212": {
      "op": "!",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "1213": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1214": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "1216": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1217": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "1220": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "1223": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "1226": {
      "op": "btoi",
      "defined_out": [
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "1227": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0"
      ]
    },
    "1230": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%29#0",
        "tmp%30#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "tmp%32#0"
      ]
    },
    "1233": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.create_campaign",
      "op": "callsub create_campaign",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "1236": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "1237": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "1238": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "1239": {
      "op": "concat",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "1240": {
      "op": "log",
      "stack_out": []
    },
    "1241": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1242": {
      "op": "return",
      "stack_out": []
    },
    "1243": {
      "block": "main_register_organization_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1245": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1246": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1247": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "1249": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1250": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "1253": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1256": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "1259": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%22#0"
      ]
    },
    "1262": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.register_organization",
      "op": "callsub register_organization",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "1265": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1266": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "1267": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "1268": {
      "op": "concat",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "1269": {
      "op": "log",
      "stack_out": []
    },
    "1270": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1271": {
      "op": "return",
      "stack_out": []
    },
    "1272": {
      "block": "main_initialize_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1274": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1275": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1276": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1278": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1279": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.initialize",
      "op": "callsub initialize",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "1282": {
      "op": "dup",
      "defined_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "1283": {
      "op": "len",
      "defined_out": [
        "length%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length%1#0"
      ]
    },
    "1284": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "as_bytes%1#0"
      ]
    },
    "1285": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length_uint16%1#0"
      ]
    },
    "1288": {
      "op": "swap",
      "stack_out": [
        "length_uint16%1#0",
        "to_encode%1#0"
      ]
    },
    "1289": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "1290": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "0x151f7c75"
      ]
    },
    "1291": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ]
    },
    "1292": {
      "op": "concat",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1293": {
      "op": "log",
      "stack_out": []
    },
    "1294": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1295": {
      "op": "return",
      "stack_out": []
    },
    "1296": {
      "block": "main_hello_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1298": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1299": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1300": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1302": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1303": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1306": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1309": {
      "callsub": "smart_contracts.aidchain_contracts.contract.AidchainContracts.hello",
      "op": "callsub hello",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "1312": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "1313": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "1314": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "1315": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "1318": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "1319": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1320": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "1321": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "1322": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1323": {
      "op": "log",
      "stack_out": []
    },
    "1324": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1325": {
      "op": "return",
      "stack_out": []
    },
    "1326": {
      "block": "main_bare_routing@34",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%200#0"
      ],
      "stack_out": [
        "tmp%200#0"
      ]
    },
    "1328": {
      "op": "bnz main_after_if_else@36",
      "stack_out": []
    },
    "1331": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%201#0"
      ],
      "stack_out": [
        "tmp%201#0"
      ]
    },
    "1333": {
      "op": "!",
      "defined_out": [
        "tmp%202#0"
      ],
      "stack_out": [
        "tmp%202#0"
      ]
    },
    "1334": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1335": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1336": {
      "op": "return",
      "stack_out": []
    },
    "1337": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.hello",
      "params": {
        "name#0": "bytes"
      },
      "block": "hello",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1340": {
      "op": "pushbytes \"Hello, \"",
      "defined_out": [
        "\"Hello, \""
      ],
      "stack_out": [
        "\"Hello, \""
      ]
    },
    "1349": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"Hello, \"",
        "name#0 (copy)"
      ],
      "stack_out": [
        "\"Hello, \"",
        "name#0 (copy)"
      ]
    },
    "1351": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1352": {
      "retsub": true,
      "op": "retsub"
    },
    "1353": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.initialize",
      "params": {},
      "block": "initialize",
      "stack_in": [],
      "op": "bytec_1 // \"campaign_counter\"",
      "defined_out": [
        "\"campaign_counter\""
      ],
      "stack_out": [
        "\"campaign_counter\""
      ]
    },
    "1354": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"campaign_counter\"",
        "0"
      ],
      "stack_out": [
        "\"campaign_counter\"",
        "0"
      ]
    },
    "1355": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1356": {
      "op": "bytec 6 // \"organization_counter\"",
      "defined_out": [
        "\"organization_counter\""
      ],
      "stack_out": [
        "\"organization_counter\""
      ]
    },
    "1358": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"organization_counter\"",
        "0"
      ]
    },
    "1359": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1360": {
      "op": "bytec_3 // \"delivery_counter\"",
      "defined_out": [
        "\"delivery_counter\""
      ],
      "stack_out": [
        "\"delivery_counter\""
      ]
    },
    "1361": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"delivery_counter\"",
        "0"
      ]
    },
    "1362": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1363": {
      "op": "bytec 4 // \"voucher_counter\"",
      "defined_out": [
        "\"voucher_counter\""
      ],
      "stack_out": [
        "\"voucher_counter\""
      ]
    },
    "1365": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"voucher_counter\"",
        "0"
      ]
    },
    "1366": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1367": {
      "op": "bytec_2 // \"milestone_counter\"",
      "defined_out": [
        "\"milestone_counter\""
      ],
      "stack_out": [
        "\"milestone_counter\""
      ]
    },
    "1368": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"milestone_counter\"",
        "0"
      ]
    },
    "1369": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1370": {
      "op": "bytec 7 // \"total_donations\"",
      "defined_out": [
        "\"total_donations\""
      ],
      "stack_out": [
        "\"total_donations\""
      ]
    },
    "1372": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_donations\"",
        "0"
      ]
    },
    "1373": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1374": {
      "op": "bytec 8 // \"total_organizations\"",
      "defined_out": [
        "\"total_organizations\""
      ],
      "stack_out": [
        "\"total_organizations\""
      ]
    },
    "1376": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_organizations\"",
        "0"
      ]
    },
    "1377": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1378": {
      "op": "bytec 14 // \"total_vouchers_issued\"",
      "defined_out": [
        "\"total_vouchers_issued\""
      ],
      "stack_out": [
        "\"total_vouchers_issued\""
      ]
    },
    "1380": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_vouchers_issued\"",
        "0"
      ]
    },
    "1381": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1382": {
      "op": "bytec 9 // \"total_milestones_completed\"",
      "defined_out": [
        "\"total_milestones_completed\""
      ],
      "stack_out": [
        "\"total_milestones_completed\""
      ]
    },
    "1384": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_milestones_completed\"",
        "0"
      ]
    },
    "1385": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1386": {
      "op": "pushbytes \"Contract initialized successfully\"",
      "defined_out": [
        "\"Contract initialized successfully\""
      ],
      "stack_out": [
        "\"Contract initialized successfully\""
      ]
    },
    "1421": {
      "retsub": true,
      "op": "retsub"
    },
    "1422": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.register_organization",
      "params": {
        "org_name#0": "bytes",
        "wallet_address#0": "bytes"
      },
      "block": "register_organization",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1425": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1426": {
      "op": "bytec 6 // \"organization_counter\"",
      "defined_out": [
        "\"organization_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"organization_counter\""
      ]
    },
    "1428": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1429": {
      "error": "check self.organization_counter exists",
      "op": "assert // check self.organization_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1430": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "1431": {
      "op": "+",
      "defined_out": [
        "org_id#0"
      ],
      "stack_out": [
        "org_id#0"
      ]
    },
    "1432": {
      "op": "bytec 6 // \"organization_counter\"",
      "stack_out": [
        "org_id#0",
        "\"organization_counter\""
      ]
    },
    "1434": {
      "op": "dig 1",
      "defined_out": [
        "\"organization_counter\"",
        "org_id#0",
        "org_id#0 (copy)"
      ],
      "stack_out": [
        "org_id#0",
        "\"organization_counter\"",
        "org_id#0 (copy)"
      ]
    },
    "1436": {
      "op": "app_global_put",
      "stack_out": [
        "org_id#0"
      ]
    },
    "1437": {
      "op": "dup",
      "stack_out": [
        "org_id#0",
        "org_id#0 (copy)"
      ]
    },
    "1438": {
      "op": "itob",
      "defined_out": [
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0"
      ]
    },
    "1439": {
      "op": "frame_dig -2",
      "defined_out": [
        "org_id#0",
        "org_name#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "org_name#0 (copy)"
      ]
    },
    "1441": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "length%0#0"
      ]
    },
    "1442": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "as_bytes%0#0"
      ]
    },
    "1443": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0"
      ]
    },
    "1446": {
      "op": "frame_dig -2",
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0",
        "org_name#0 (copy)"
      ]
    },
    "1448": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0"
      ]
    },
    "1449": {
      "op": "frame_dig -1",
      "defined_out": [
        "encoded_value%0#0",
        "org_id#0",
        "val_as_bytes%0#0",
        "wallet_address#0 (copy)"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "wallet_address#0 (copy)"
      ]
    },
    "1451": {
      "op": "len",
      "defined_out": [
        "encoded_value%0#0",
        "length%1#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "length%1#0"
      ]
    },
    "1452": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "encoded_value%0#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "as_bytes%1#0"
      ]
    },
    "1453": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_value%0#0",
        "length_uint16%1#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "length_uint16%1#0"
      ]
    },
    "1456": {
      "op": "frame_dig -1",
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "length_uint16%1#0",
        "wallet_address#0 (copy)"
      ]
    },
    "1458": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ]
    },
    "1459": {
      "op": "dig 2",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "org_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "1461": {
      "op": "pushbytes 0x0014",
      "defined_out": [
        "0x0014",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "org_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0 (copy)",
        "0x0014"
      ]
    },
    "1465": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1466": {
      "op": "dig 2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "encoded_value%1#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0 (copy)"
      ]
    },
    "1468": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%0#0"
      ]
    },
    "1469": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "data_length%0#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%0#0",
        "20"
      ]
    },
    "1471": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0"
      ]
    },
    "1472": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "as_bytes%3#0"
      ]
    },
    "1473": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "offset_as_uint16%1#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%1#0"
      ]
    },
    "1476": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1477": {
      "op": "bytec 5 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0",
        "0x0000000000000000"
      ]
    },
    "1479": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1480": {
      "op": "uncover 2",
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0"
      ]
    },
    "1482": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_value%1#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1483": {
      "op": "swap",
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%1#0"
      ]
    },
    "1484": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1485": {
      "op": "bytec 15 // \"orgs\"",
      "defined_out": [
        "\"orgs\"",
        "encoded_tuple_buffer%6#0",
        "org_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "org_id#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%6#0",
        "\"orgs\""
      ]
    },
    "1487": {
      "op": "uncover 2",
      "stack_out": [
        "org_id#0",
        "encoded_tuple_buffer%6#0",
        "\"orgs\"",
        "val_as_bytes%0#0"
      ]
    },
    "1489": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%6#0",
        "org_id#0"
      ],
      "stack_out": [
        "org_id#0",
        "encoded_tuple_buffer%6#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1490": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_tuple_buffer%6#0",
        "org_id#0"
      ],
      "stack_out": [
        "org_id#0",
        "encoded_tuple_buffer%6#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1491": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%6#0",
        "org_id#0",
        "{box_del}"
      ],
      "stack_out": [
        "org_id#0",
        "encoded_tuple_buffer%6#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "1492": {
      "op": "pop",
      "stack_out": [
        "org_id#0",
        "encoded_tuple_buffer%6#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1493": {
      "op": "swap",
      "stack_out": [
        "org_id#0",
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1494": {
      "op": "box_put",
      "stack_out": [
        "org_id#0"
      ]
    },
    "1495": {
      "op": "intc_0 // 0",
      "stack_out": [
        "org_id#0",
        "0"
      ]
    },
    "1496": {
      "op": "bytec 8 // \"total_organizations\"",
      "defined_out": [
        "\"total_organizations\"",
        "0",
        "org_id#0"
      ],
      "stack_out": [
        "org_id#0",
        "0",
        "\"total_organizations\""
      ]
    },
    "1498": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "org_id#0"
      ],
      "stack_out": [
        "org_id#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1499": {
      "error": "check self.total_organizations exists",
      "op": "assert // check self.total_organizations exists",
      "stack_out": [
        "org_id#0",
        "maybe_value%2#0"
      ]
    },
    "1500": {
      "op": "intc_1 // 1",
      "stack_out": [
        "org_id#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "1501": {
      "op": "+",
      "defined_out": [
        "materialized_values%1#0",
        "org_id#0"
      ],
      "stack_out": [
        "org_id#0",
        "materialized_values%1#0"
      ]
    },
    "1502": {
      "op": "bytec 8 // \"total_organizations\"",
      "stack_out": [
        "org_id#0",
        "materialized_values%1#0",
        "\"total_organizations\""
      ]
    },
    "1504": {
      "op": "swap",
      "stack_out": [
        "org_id#0",
        "\"total_organizations\"",
        "materialized_values%1#0"
      ]
    },
    "1505": {
      "op": "app_global_put",
      "stack_out": [
        "org_id#0"
      ]
    },
    "1506": {
      "retsub": true,
      "op": "retsub"
    },
    "1507": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.create_campaign",
      "params": {
        "title#0": "bytes",
        "target#0": "uint64",
        "creator#0": "bytes"
      },
      "block": "create_campaign",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "1510": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1511": {
      "op": "bytec_1 // \"campaign_counter\"",
      "defined_out": [
        "\"campaign_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"campaign_counter\""
      ]
    },
    "1512": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1513": {
      "error": "check self.campaign_counter exists",
      "op": "assert // check self.campaign_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1514": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "1515": {
      "op": "+",
      "defined_out": [
        "campaign_id#0"
      ],
      "stack_out": [
        "campaign_id#0"
      ]
    },
    "1516": {
      "op": "bytec_1 // \"campaign_counter\"",
      "stack_out": [
        "campaign_id#0",
        "\"campaign_counter\""
      ]
    },
    "1517": {
      "op": "dig 1",
      "defined_out": [
        "\"campaign_counter\"",
        "campaign_id#0",
        "campaign_id#0 (copy)"
      ],
      "stack_out": [
        "campaign_id#0",
        "\"campaign_counter\"",
        "campaign_id#0 (copy)"
      ]
    },
    "1519": {
      "op": "app_global_put",
      "stack_out": [
        "campaign_id#0"
      ]
    },
    "1520": {
      "op": "dup",
      "stack_out": [
        "campaign_id#0",
        "campaign_id#0 (copy)"
      ]
    },
    "1521": {
      "op": "itob",
      "defined_out": [
        "campaign_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0"
      ]
    },
    "1522": {
      "op": "frame_dig -3",
      "defined_out": [
        "campaign_id#0",
        "title#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "title#0 (copy)"
      ]
    },
    "1524": {
      "op": "len",
      "defined_out": [
        "campaign_id#0",
        "length%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "length%0#0"
      ]
    },
    "1525": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "campaign_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "as_bytes%0#0"
      ]
    },
    "1526": {
      "op": "extract 6 2",
      "defined_out": [
        "campaign_id#0",
        "length_uint16%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0"
      ]
    },
    "1529": {
      "op": "frame_dig -3",
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0",
        "title#0 (copy)"
      ]
    },
    "1531": {
      "op": "concat",
      "defined_out": [
        "campaign_id#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0"
      ]
    },
    "1532": {
      "op": "frame_dig -2",
      "defined_out": [
        "campaign_id#0",
        "encoded_value%0#0",
        "target#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "target#0 (copy)"
      ]
    },
    "1534": {
      "op": "itob",
      "defined_out": [
        "campaign_id#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1535": {
      "op": "frame_dig -1",
      "defined_out": [
        "campaign_id#0",
        "creator#0 (copy)",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "creator#0 (copy)"
      ]
    },
    "1537": {
      "op": "len",
      "defined_out": [
        "campaign_id#0",
        "encoded_value%0#0",
        "length%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "length%1#0"
      ]
    },
    "1538": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "campaign_id#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "as_bytes%1#0"
      ]
    },
    "1539": {
      "op": "extract 6 2",
      "defined_out": [
        "campaign_id#0",
        "encoded_value%0#0",
        "length_uint16%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "length_uint16%1#0"
      ]
    },
    "1542": {
      "op": "frame_dig -1",
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "length_uint16%1#0",
        "creator#0 (copy)"
      ]
    },
    "1544": {
      "op": "concat",
      "defined_out": [
        "campaign_id#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "encoded_value%1#0"
      ]
    },
    "1545": {
      "op": "dig 3",
      "defined_out": [
        "campaign_id#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "1547": {
      "op": "pushbytes 0x0024",
      "defined_out": [
        "0x0024",
        "campaign_id#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0 (copy)",
        "0x0024"
      ]
    },
    "1551": {
      "op": "concat",
      "defined_out": [
        "campaign_id#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1552": {
      "op": "dig 3",
      "defined_out": [
        "campaign_id#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0 (copy)"
      ]
    },
    "1554": {
      "op": "len",
      "defined_out": [
        "campaign_id#0",
        "data_length%0#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%0#0"
      ]
    },
    "1555": {
      "op": "pushint 36 // 36",
      "defined_out": [
        "36",
        "campaign_id#0",
        "data_length%0#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%0#0",
        "36"
      ]
    },
    "1557": {
      "op": "+",
      "defined_out": [
        "campaign_id#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0"
      ]
    },
    "1558": {
      "op": "swap",
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "encoded_value%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1559": {
      "op": "uncover 3",
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%1#0"
      ]
    },
    "1561": {
      "op": "concat",
      "defined_out": [
        "campaign_id#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1562": {
      "op": "bytec 5 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "campaign_id#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0",
        "0x0000000000000000"
      ]
    },
    "1564": {
      "op": "concat",
      "defined_out": [
        "campaign_id#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1565": {
      "op": "swap",
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%4#0",
        "current_tail_offset%1#0"
      ]
    },
    "1566": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "campaign_id#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%4#0",
        "as_bytes%3#0"
      ]
    },
    "1567": {
      "op": "extract 6 2",
      "defined_out": [
        "campaign_id#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "offset_as_uint16%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%4#0",
        "offset_as_uint16%1#0"
      ]
    },
    "1570": {
      "op": "concat",
      "defined_out": [
        "campaign_id#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1571": {
      "op": "bytec 11 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "campaign_id#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%5#0",
        "0x0000000000000001"
      ]
    },
    "1573": {
      "op": "concat",
      "defined_out": [
        "campaign_id#0",
        "encoded_tuple_buffer%6#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1574": {
      "op": "uncover 2",
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%6#0",
        "encoded_value%0#0"
      ]
    },
    "1576": {
      "op": "concat",
      "defined_out": [
        "campaign_id#0",
        "encoded_tuple_buffer%7#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1577": {
      "op": "swap",
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%7#0",
        "encoded_value%1#0"
      ]
    },
    "1578": {
      "op": "concat",
      "defined_out": [
        "campaign_id#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1579": {
      "op": "bytec 10 // \"campaigns\"",
      "defined_out": [
        "\"campaigns\"",
        "campaign_id#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%8#0",
        "\"campaigns\""
      ]
    },
    "1581": {
      "op": "uncover 2",
      "stack_out": [
        "campaign_id#0",
        "encoded_tuple_buffer%8#0",
        "\"campaigns\"",
        "val_as_bytes%0#0"
      ]
    },
    "1583": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "campaign_id#0",
        "encoded_tuple_buffer%8#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "encoded_tuple_buffer%8#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1584": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "campaign_id#0",
        "encoded_tuple_buffer%8#0"
      ],
      "stack_out": [
        "campaign_id#0",
        "encoded_tuple_buffer%8#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1585": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "campaign_id#0",
        "encoded_tuple_buffer%8#0",
        "{box_del}"
      ],
      "stack_out": [
        "campaign_id#0",
        "encoded_tuple_buffer%8#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "1586": {
      "op": "pop",
      "stack_out": [
        "campaign_id#0",
        "encoded_tuple_buffer%8#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1587": {
      "op": "swap",
      "stack_out": [
        "campaign_id#0",
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1588": {
      "op": "box_put",
      "stack_out": [
        "campaign_id#0"
      ]
    },
    "1589": {
      "retsub": true,
      "op": "retsub"
    },
    "1590": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_campaign_count",
      "params": {},
      "block": "get_campaign_count",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1591": {
      "op": "bytec_1 // \"campaign_counter\"",
      "defined_out": [
        "\"campaign_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"campaign_counter\""
      ]
    },
    "1592": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1593": {
      "error": "check self.campaign_counter exists",
      "op": "assert // check self.campaign_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1594": {
      "retsub": true,
      "op": "retsub"
    },
    "1595": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_organization_count",
      "params": {},
      "block": "get_organization_count",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1596": {
      "op": "bytec 6 // \"organization_counter\"",
      "defined_out": [
        "\"organization_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"organization_counter\""
      ]
    },
    "1598": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1599": {
      "error": "check self.organization_counter exists",
      "op": "assert // check self.organization_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1600": {
      "retsub": true,
      "op": "retsub"
    },
    "1601": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.create_donation",
      "params": {
        "campaign_id#0": "uint64"
      },
      "block": "create_donation",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1604": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1605": {
      "op": "bytec_1 // \"campaign_counter\"",
      "defined_out": [
        "\"campaign_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"campaign_counter\""
      ]
    },
    "1606": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1607": {
      "error": "check self.campaign_counter exists",
      "op": "assert // check self.campaign_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1608": {
      "op": "frame_dig -1",
      "defined_out": [
        "campaign_id#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "campaign_id#0 (copy)"
      ]
    },
    "1610": {
      "op": ">=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1611": {
      "error": "Campaign ID out of range",
      "op": "assert // Campaign ID out of range",
      "stack_out": []
    },
    "1612": {
      "op": "frame_dig -1",
      "stack_out": [
        "campaign_id#0 (copy)"
      ]
    },
    "1614": {
      "error": "Campaign ID cannot be zero",
      "op": "assert // Campaign ID cannot be zero",
      "stack_out": []
    },
    "1615": {
      "op": "frame_dig -1",
      "stack_out": [
        "campaign_id#0 (copy)"
      ]
    },
    "1617": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1618": {
      "op": "bytec 10 // \"campaigns\"",
      "defined_out": [
        "\"campaigns\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"campaigns\""
      ]
    },
    "1620": {
      "op": "swap",
      "stack_out": [
        "\"campaigns\"",
        "val_as_bytes%0#0"
      ]
    },
    "1621": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1622": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1623": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "1625": {
      "error": "Campaign not found",
      "op": "assert // Campaign not found",
      "stack_out": []
    },
    "1626": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1627": {
      "op": "bytec 7 // \"total_donations\"",
      "defined_out": [
        "\"total_donations\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_donations\""
      ]
    },
    "1629": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1630": {
      "error": "check self.total_donations exists",
      "op": "assert // check self.total_donations exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1631": {
      "op": "pushint 1000 // 1000",
      "defined_out": [
        "1000",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "1000"
      ]
    },
    "1634": {
      "op": "+",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "1635": {
      "op": "bytec 7 // \"total_donations\"",
      "stack_out": [
        "materialized_values%0#0",
        "\"total_donations\""
      ]
    },
    "1637": {
      "op": "swap",
      "stack_out": [
        "\"total_donations\"",
        "materialized_values%0#0"
      ]
    },
    "1638": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1639": {
      "op": "pushbytes \"Donation recorded successfully\"",
      "defined_out": [
        "\"Donation recorded successfully\""
      ],
      "stack_out": [
        "\"Donation recorded successfully\""
      ]
    },
    "1671": {
      "retsub": true,
      "op": "retsub"
    },
    "1672": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_total_donations",
      "params": {},
      "block": "get_total_donations",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1673": {
      "op": "bytec 7 // \"total_donations\"",
      "defined_out": [
        "\"total_donations\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_donations\""
      ]
    },
    "1675": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1676": {
      "error": "check self.total_donations exists",
      "op": "assert // check self.total_donations exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1677": {
      "retsub": true,
      "op": "retsub"
    },
    "1678": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.calculate_total",
      "params": {
        "amount1#0": "uint64",
        "amount2#0": "uint64"
      },
      "block": "calculate_total",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1681": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount1#0 (copy)"
      ],
      "stack_out": [
        "amount1#0 (copy)"
      ]
    },
    "1683": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount1#0 (copy)",
        "amount2#0 (copy)"
      ],
      "stack_out": [
        "amount1#0 (copy)",
        "amount2#0 (copy)"
      ]
    },
    "1685": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1686": {
      "retsub": true,
      "op": "retsub"
    },
    "1687": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.validate_donation",
      "params": {
        "amount#0": "uint64",
        "donor#0": "bytes"
      },
      "block": "validate_donation",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1690": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "1692": {
      "op": "bz validate_donation_else_body@2",
      "stack_out": []
    },
    "1695": {
      "op": "pushbytes \"Valid donation from \"",
      "defined_out": [
        "\"Valid donation from \""
      ],
      "stack_out": [
        "\"Valid donation from \""
      ]
    },
    "1717": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"Valid donation from \"",
        "donor#0 (copy)"
      ],
      "stack_out": [
        "\"Valid donation from \"",
        "donor#0 (copy)"
      ]
    },
    "1719": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1720": {
      "retsub": true,
      "op": "retsub"
    },
    "1721": {
      "block": "validate_donation_else_body@2",
      "stack_in": [],
      "op": "pushbytes \"Invalid donation amount\"",
      "defined_out": [
        "\"Invalid donation amount\""
      ],
      "stack_out": [
        "\"Invalid donation amount\""
      ]
    },
    "1746": {
      "retsub": true,
      "op": "retsub"
    },
    "1747": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.log_delivery",
      "params": {
        "recipient#0": "bytes",
        "location#0": "bytes"
      },
      "block": "log_delivery",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1750": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1751": {
      "op": "bytec_3 // \"delivery_counter\"",
      "defined_out": [
        "\"delivery_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"delivery_counter\""
      ]
    },
    "1752": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1753": {
      "error": "check self.delivery_counter exists",
      "op": "assert // check self.delivery_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1754": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "1755": {
      "op": "+",
      "defined_out": [
        "delivery_id#0"
      ],
      "stack_out": [
        "delivery_id#0"
      ]
    },
    "1756": {
      "op": "bytec_3 // \"delivery_counter\"",
      "stack_out": [
        "delivery_id#0",
        "\"delivery_counter\""
      ]
    },
    "1757": {
      "op": "dig 1",
      "defined_out": [
        "\"delivery_counter\"",
        "delivery_id#0",
        "delivery_id#0 (copy)"
      ],
      "stack_out": [
        "delivery_id#0",
        "\"delivery_counter\"",
        "delivery_id#0 (copy)"
      ]
    },
    "1759": {
      "op": "app_global_put",
      "stack_out": [
        "delivery_id#0"
      ]
    },
    "1760": {
      "op": "dup",
      "stack_out": [
        "delivery_id#0",
        "delivery_id#0 (copy)"
      ]
    },
    "1761": {
      "op": "itob",
      "defined_out": [
        "delivery_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0"
      ]
    },
    "1762": {
      "op": "frame_dig -2",
      "defined_out": [
        "delivery_id#0",
        "recipient#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "recipient#0 (copy)"
      ]
    },
    "1764": {
      "op": "len",
      "defined_out": [
        "delivery_id#0",
        "length%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "length%0#0"
      ]
    },
    "1765": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "delivery_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "as_bytes%0#0"
      ]
    },
    "1766": {
      "op": "extract 6 2",
      "defined_out": [
        "delivery_id#0",
        "length_uint16%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0"
      ]
    },
    "1769": {
      "op": "frame_dig -2",
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0",
        "recipient#0 (copy)"
      ]
    },
    "1771": {
      "op": "concat",
      "defined_out": [
        "delivery_id#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0"
      ]
    },
    "1772": {
      "op": "frame_dig -1",
      "defined_out": [
        "delivery_id#0",
        "encoded_value%0#0",
        "location#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "location#0 (copy)"
      ]
    },
    "1774": {
      "op": "len",
      "defined_out": [
        "delivery_id#0",
        "encoded_value%0#0",
        "length%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "length%1#0"
      ]
    },
    "1775": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "delivery_id#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "as_bytes%1#0"
      ]
    },
    "1776": {
      "op": "extract 6 2",
      "defined_out": [
        "delivery_id#0",
        "encoded_value%0#0",
        "length_uint16%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "length_uint16%1#0"
      ]
    },
    "1779": {
      "op": "frame_dig -1",
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "length_uint16%1#0",
        "location#0 (copy)"
      ]
    },
    "1781": {
      "op": "concat",
      "defined_out": [
        "delivery_id#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ]
    },
    "1782": {
      "op": "dig 2",
      "defined_out": [
        "delivery_id#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "1784": {
      "op": "pushbytes 0x0016",
      "defined_out": [
        "0x0016",
        "delivery_id#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0 (copy)",
        "0x0016"
      ]
    },
    "1788": {
      "op": "concat",
      "defined_out": [
        "delivery_id#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1789": {
      "op": "dig 2",
      "defined_out": [
        "delivery_id#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0 (copy)"
      ]
    },
    "1791": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "delivery_id#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%0#0"
      ]
    },
    "1792": {
      "op": "pushint 22 // 22",
      "defined_out": [
        "22",
        "data_length%0#0",
        "delivery_id#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%0#0",
        "22"
      ]
    },
    "1794": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "delivery_id#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0"
      ]
    },
    "1795": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)",
        "delivery_id#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)"
      ]
    },
    "1796": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "current_tail_offset%1#0",
        "delivery_id#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0",
        "as_bytes%3#0"
      ]
    },
    "1797": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%1#0",
        "delivery_id#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "offset_as_uint16%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0"
      ]
    },
    "1800": {
      "op": "uncover 2",
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1802": {
      "op": "swap",
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%1#0"
      ]
    },
    "1803": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "delivery_id#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1804": {
      "op": "dig 2",
      "defined_out": [
        "current_tail_offset%1#0",
        "delivery_id#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%1#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%1#0 (copy)"
      ]
    },
    "1806": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%1#0",
        "data_length%1#0",
        "delivery_id#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0",
        "data_length%1#0"
      ]
    },
    "1807": {
      "op": "uncover 2",
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0",
        "data_length%1#0",
        "current_tail_offset%1#0"
      ]
    },
    "1809": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%2#0",
        "delivery_id#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0",
        "current_tail_offset%2#0"
      ]
    },
    "1810": {
      "op": "itob",
      "defined_out": [
        "as_bytes%4#0",
        "delivery_id#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0",
        "as_bytes%4#0"
      ]
    },
    "1811": {
      "op": "extract 6 2",
      "defined_out": [
        "delivery_id#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "offset_as_uint16%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%3#0",
        "offset_as_uint16%2#0"
      ]
    },
    "1814": {
      "op": "concat",
      "defined_out": [
        "delivery_id#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1815": {
      "op": "bytec 5 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "delivery_id#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%4#0",
        "0x0000000000000000"
      ]
    },
    "1817": {
      "op": "concat",
      "defined_out": [
        "delivery_id#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1818": {
      "op": "uncover 2",
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0"
      ]
    },
    "1820": {
      "op": "concat",
      "defined_out": [
        "delivery_id#0",
        "encoded_tuple_buffer%6#0",
        "encoded_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_value%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1821": {
      "op": "swap",
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%6#0",
        "encoded_value%1#0"
      ]
    },
    "1822": {
      "op": "concat",
      "defined_out": [
        "delivery_id#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1823": {
      "op": "pushbytes 0x0000",
      "defined_out": [
        "0x0000",
        "delivery_id#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%7#0",
        "0x0000"
      ]
    },
    "1827": {
      "op": "concat",
      "defined_out": [
        "delivery_id#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1828": {
      "op": "bytec 12 // \"deliveries\"",
      "defined_out": [
        "\"deliveries\"",
        "delivery_id#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%8#0",
        "\"deliveries\""
      ]
    },
    "1830": {
      "op": "uncover 2",
      "stack_out": [
        "delivery_id#0",
        "encoded_tuple_buffer%8#0",
        "\"deliveries\"",
        "val_as_bytes%0#0"
      ]
    },
    "1832": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "delivery_id#0",
        "encoded_tuple_buffer%8#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "encoded_tuple_buffer%8#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1833": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "delivery_id#0",
        "encoded_tuple_buffer%8#0"
      ],
      "stack_out": [
        "delivery_id#0",
        "encoded_tuple_buffer%8#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1834": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "delivery_id#0",
        "encoded_tuple_buffer%8#0",
        "{box_del}"
      ],
      "stack_out": [
        "delivery_id#0",
        "encoded_tuple_buffer%8#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "1835": {
      "op": "pop",
      "stack_out": [
        "delivery_id#0",
        "encoded_tuple_buffer%8#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1836": {
      "op": "swap",
      "stack_out": [
        "delivery_id#0",
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1837": {
      "op": "box_put",
      "stack_out": [
        "delivery_id#0"
      ]
    },
    "1838": {
      "retsub": true,
      "op": "retsub"
    },
    "1839": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.verify_delivery",
      "params": {
        "delivery_id#0": "uint64",
        "agent#0": "bytes"
      },
      "block": "verify_delivery",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1842": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1843": {
      "op": "bytec_3 // \"delivery_counter\"",
      "defined_out": [
        "\"delivery_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"delivery_counter\""
      ]
    },
    "1844": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1845": {
      "error": "check self.delivery_counter exists",
      "op": "assert // check self.delivery_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1846": {
      "op": "frame_dig -2",
      "defined_out": [
        "delivery_id#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "delivery_id#0 (copy)"
      ]
    },
    "1848": {
      "op": ">=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1849": {
      "error": "Delivery ID out of range",
      "op": "assert // Delivery ID out of range",
      "stack_out": []
    },
    "1850": {
      "op": "frame_dig -2",
      "stack_out": [
        "delivery_id#0 (copy)"
      ]
    },
    "1852": {
      "error": "Delivery ID cannot be zero",
      "op": "assert // Delivery ID cannot be zero",
      "stack_out": []
    },
    "1853": {
      "op": "frame_dig -2",
      "stack_out": [
        "delivery_id#0 (copy)"
      ]
    },
    "1855": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1856": {
      "op": "bytec 12 // \"deliveries\"",
      "defined_out": [
        "\"deliveries\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"deliveries\""
      ]
    },
    "1858": {
      "op": "swap",
      "stack_out": [
        "\"deliveries\"",
        "val_as_bytes%0#0"
      ]
    },
    "1859": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1860": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1861": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1862": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1864": {
      "error": "Delivery not found",
      "op": "assert // Delivery not found",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1865": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1866": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "maybe_exists%2#0"
      ]
    },
    "1867": {
      "error": "check self.deliveries entry exists",
      "op": "assert // check self.deliveries entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0"
      ]
    },
    "1868": {
      "op": "bytec 11 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "box_prefixed_key%0#0",
        "delivery_info#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "0x0000000000000001"
      ]
    },
    "1870": {
      "op": "replace2 14",
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0"
      ]
    },
    "1872": {
      "op": "frame_dig -1",
      "defined_out": [
        "agent#0 (copy)",
        "box_prefixed_key%0#0",
        "delivery_info#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "agent#0 (copy)"
      ]
    },
    "1874": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "length%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "length%0#0"
      ]
    },
    "1875": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "box_prefixed_key%0#0",
        "delivery_info#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "as_bytes%0#0"
      ]
    },
    "1876": {
      "op": "extract 6 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "length_uint16%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "length_uint16%0#0"
      ]
    },
    "1879": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "length_uint16%0#0",
        "agent#0 (copy)"
      ]
    },
    "1881": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "encoded_value%0#0"
      ]
    },
    "1882": {
      "op": "dig 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "delivery_info#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "encoded_value%0#0",
        "delivery_info#0 (copy)"
      ]
    },
    "1884": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "delivery_info#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "encoded_value%0#0",
        "delivery_info#0 (copy)",
        "12"
      ]
    },
    "1886": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "encoded_value%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "encoded_value%0#0",
        "item_offset%0#0"
      ]
    },
    "1887": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "item_offset%0#0",
        "delivery_info#0"
      ]
    },
    "1889": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "item_offset%0#0",
        "delivery_info#0",
        "0"
      ]
    },
    "1890": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "delivery_info#0",
        "0",
        "item_offset%0#0"
      ]
    },
    "1892": {
      "op": "extract3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "1893": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "encoded_value%0#0"
      ]
    },
    "1894": {
      "op": "concat",
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0"
      ]
    },
    "1895": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1897": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0",
        "{box_del}"
      ]
    },
    "1898": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "delivery_info#0"
      ]
    },
    "1899": {
      "op": "box_put",
      "stack_out": []
    },
    "1900": {
      "op": "pushbytes \"Delivery verified by agent: \"",
      "defined_out": [
        "\"Delivery verified by agent: \""
      ],
      "stack_out": [
        "\"Delivery verified by agent: \""
      ]
    },
    "1930": {
      "op": "frame_dig -1",
      "stack_out": [
        "\"Delivery verified by agent: \"",
        "agent#0 (copy)"
      ]
    },
    "1932": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1933": {
      "retsub": true,
      "op": "retsub"
    },
    "1934": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.create_voucher_asset",
      "params": {
        "asset_name#0": "bytes",
        "total_supply#0": "uint64"
      },
      "block": "create_voucher_asset",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1937": {
      "op": "itxn_begin"
    },
    "1938": {
      "op": "global MinTxnFee",
      "defined_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "1940": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "1942": {
      "op": "dupn 3",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "1944": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "1946": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "1948": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "1950": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "1952": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "0"
      ]
    },
    "1953": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "1955": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "0"
      ]
    },
    "1956": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "1958": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "total_supply#0 (copy)"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "total_supply#0 (copy)"
      ]
    },
    "1960": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "1962": {
      "op": "pushbytes \"VOUCHER\"",
      "defined_out": [
        "\"VOUCHER\"",
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "\"VOUCHER\""
      ]
    },
    "1971": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "1973": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset_name#0 (copy)",
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "asset_name#0 (copy)"
      ]
    },
    "1975": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "1977": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg",
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "acfg"
      ]
    },
    "1979": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "1981": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1983": {
      "op": "itxn_submit"
    },
    "1984": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "txn_result.CreatedAssetID#0"
      ],
      "stack_out": [
        "txn_result.CreatedAssetID#0"
      ]
    },
    "1986": {
      "op": "intc_0 // 0",
      "stack_out": [
        "txn_result.CreatedAssetID#0",
        "0"
      ]
    },
    "1987": {
      "op": "bytec 4 // \"voucher_counter\"",
      "defined_out": [
        "\"voucher_counter\"",
        "0",
        "txn_result.CreatedAssetID#0"
      ],
      "stack_out": [
        "txn_result.CreatedAssetID#0",
        "0",
        "\"voucher_counter\""
      ]
    },
    "1989": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "txn_result.CreatedAssetID#0"
      ],
      "stack_out": [
        "txn_result.CreatedAssetID#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1990": {
      "error": "check self.voucher_counter exists",
      "op": "assert // check self.voucher_counter exists",
      "stack_out": [
        "txn_result.CreatedAssetID#0",
        "maybe_value%0#0"
      ]
    },
    "1991": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "txn_result.CreatedAssetID#0"
      ],
      "stack_out": [
        "txn_result.CreatedAssetID#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1992": {
      "op": "+",
      "defined_out": [
        "txn_result.CreatedAssetID#0",
        "voucher_id#0"
      ],
      "stack_out": [
        "txn_result.CreatedAssetID#0",
        "voucher_id#0"
      ]
    },
    "1993": {
      "op": "bytec 4 // \"voucher_counter\"",
      "stack_out": [
        "txn_result.CreatedAssetID#0",
        "voucher_id#0",
        "\"voucher_counter\""
      ]
    },
    "1995": {
      "op": "dig 1",
      "defined_out": [
        "\"voucher_counter\"",
        "txn_result.CreatedAssetID#0",
        "voucher_id#0",
        "voucher_id#0 (copy)"
      ],
      "stack_out": [
        "txn_result.CreatedAssetID#0",
        "voucher_id#0",
        "\"voucher_counter\"",
        "voucher_id#0 (copy)"
      ]
    },
    "1997": {
      "op": "app_global_put",
      "stack_out": [
        "txn_result.CreatedAssetID#0",
        "voucher_id#0"
      ]
    },
    "1998": {
      "op": "itob",
      "defined_out": [
        "txn_result.CreatedAssetID#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "txn_result.CreatedAssetID#0",
        "val_as_bytes%0#0"
      ]
    },
    "1999": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%0#0",
        "txn_result.CreatedAssetID#0"
      ]
    },
    "2000": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2001": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "asset_name#0 (copy)"
      ]
    },
    "2003": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "length%0#0"
      ]
    },
    "2004": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "as_bytes%0#0"
      ]
    },
    "2005": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "length_uint16%0#0"
      ]
    },
    "2008": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "length_uint16%0#0",
        "asset_name#0 (copy)"
      ]
    },
    "2010": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0"
      ]
    },
    "2011": {
      "op": "frame_dig -1",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "total_supply#0 (copy)"
      ]
    },
    "2013": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "val_as_bytes%2#0"
      ]
    },
    "2014": {
      "op": "dig 3",
      "defined_out": [
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2016": {
      "op": "dig 3",
      "defined_out": [
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%0#0 (copy)",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "2018": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2019": {
      "op": "pushbytes 0x0022",
      "defined_out": [
        "0x0022",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%2#0",
        "0x0022"
      ]
    },
    "2023": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2024": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%2#0"
      ]
    },
    "2025": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2026": {
      "op": "bytec 5 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%4#0",
        "0x0000000000000000"
      ]
    },
    "2028": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2029": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0"
      ]
    },
    "2030": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2031": {
      "op": "bytec 16 // \"vouchers\"",
      "defined_out": [
        "\"vouchers\"",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "\"vouchers\""
      ]
    },
    "2033": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "\"vouchers\"",
        "val_as_bytes%0#0"
      ]
    },
    "2035": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2036": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2037": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "2038": {
      "op": "pop",
      "stack_out": [
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2039": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%1#0",
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2040": {
      "op": "box_put",
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "2041": {
      "retsub": true,
      "op": "retsub"
    },
    "2042": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.redeem_voucher",
      "params": {
        "voucher_id#0": "uint64",
        "merchant#0": "bytes",
        "amount#0": "uint64"
      },
      "block": "redeem_voucher",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "2045": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2046": {
      "op": "bytec 4 // \"voucher_counter\"",
      "defined_out": [
        "\"voucher_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"voucher_counter\""
      ]
    },
    "2048": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2049": {
      "error": "check self.voucher_counter exists",
      "op": "assert // check self.voucher_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2050": {
      "op": "frame_dig -3",
      "defined_out": [
        "maybe_value%0#0",
        "voucher_id#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "voucher_id#0 (copy)"
      ]
    },
    "2052": {
      "op": "<",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2053": {
      "op": "bnz redeem_voucher_if_body@2",
      "stack_out": []
    },
    "2056": {
      "op": "frame_dig -3",
      "stack_out": [
        "voucher_id#0 (copy)"
      ]
    },
    "2058": {
      "op": "bnz redeem_voucher_after_if_else@3",
      "stack_out": []
    },
    "2061": {
      "block": "redeem_voucher_if_body@2",
      "stack_in": [],
      "op": "pushbytes \"Invalid voucher ID\"",
      "defined_out": [
        "\"Invalid voucher ID\""
      ],
      "stack_out": [
        "\"Invalid voucher ID\""
      ]
    },
    "2081": {
      "retsub": true,
      "op": "retsub"
    },
    "2082": {
      "block": "redeem_voucher_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "2084": {
      "op": "bnz redeem_voucher_after_if_else@5",
      "stack_out": []
    },
    "2087": {
      "op": "pushbytes \"Amount must be greater than zero\"",
      "defined_out": [
        "\"Amount must be greater than zero\""
      ],
      "stack_out": [
        "\"Amount must be greater than zero\""
      ]
    },
    "2121": {
      "retsub": true,
      "op": "retsub"
    },
    "2122": {
      "block": "redeem_voucher_after_if_else@5",
      "stack_in": [],
      "op": "pushbytes \"Vouchers redeemed at \"",
      "defined_out": [
        "\"Vouchers redeemed at \""
      ],
      "stack_out": [
        "\"Vouchers redeemed at \""
      ]
    },
    "2145": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"Vouchers redeemed at \"",
        "merchant#0 (copy)"
      ],
      "stack_out": [
        "\"Vouchers redeemed at \"",
        "merchant#0 (copy)"
      ]
    },
    "2147": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2148": {
      "retsub": true,
      "op": "retsub"
    },
    "2149": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.create_milestone",
      "params": {
        "campaign_id#0": "uint64",
        "target_amount#0": "uint64",
        "description#0": "bytes"
      },
      "block": "create_milestone",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "2152": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2153": {
      "op": "bytec_1 // \"campaign_counter\"",
      "defined_out": [
        "\"campaign_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"campaign_counter\""
      ]
    },
    "2154": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2155": {
      "error": "check self.campaign_counter exists",
      "op": "assert // check self.campaign_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2156": {
      "op": "frame_dig -3",
      "defined_out": [
        "campaign_id#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "campaign_id#0 (copy)"
      ]
    },
    "2158": {
      "op": ">=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2159": {
      "error": "Campaign ID out of range",
      "op": "assert // Campaign ID out of range",
      "stack_out": []
    },
    "2160": {
      "op": "frame_dig -3",
      "stack_out": [
        "campaign_id#0 (copy)"
      ]
    },
    "2162": {
      "error": "Campaign ID cannot be zero",
      "op": "assert // Campaign ID cannot be zero",
      "stack_out": []
    },
    "2163": {
      "op": "frame_dig -3",
      "stack_out": [
        "campaign_id#0 (copy)"
      ]
    },
    "2165": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "2166": {
      "op": "bytec 10 // \"campaigns\"",
      "defined_out": [
        "\"campaigns\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"campaigns\""
      ]
    },
    "2168": {
      "op": "dig 1",
      "defined_out": [
        "\"campaigns\"",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"campaigns\"",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2170": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2171": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2172": {
      "op": "bury 1",
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2174": {
      "error": "Campaign not found",
      "op": "assert // Campaign not found",
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "2175": {
      "op": "intc_0 // 0",
      "stack_out": [
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "2176": {
      "op": "bytec_2 // \"milestone_counter\"",
      "defined_out": [
        "\"milestone_counter\"",
        "0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0",
        "\"milestone_counter\""
      ]
    },
    "2177": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "2178": {
      "error": "check self.milestone_counter exists",
      "op": "assert // check self.milestone_counter exists",
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0"
      ]
    },
    "2179": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "2180": {
      "op": "+",
      "defined_out": [
        "milestone_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0"
      ]
    },
    "2181": {
      "op": "bytec_2 // \"milestone_counter\"",
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0",
        "\"milestone_counter\""
      ]
    },
    "2182": {
      "op": "dig 1",
      "defined_out": [
        "\"milestone_counter\"",
        "milestone_id#0",
        "milestone_id#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0",
        "\"milestone_counter\"",
        "milestone_id#0 (copy)"
      ]
    },
    "2184": {
      "op": "app_global_put",
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0"
      ]
    },
    "2185": {
      "op": "dup",
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0",
        "milestone_id#0 (copy)"
      ]
    },
    "2186": {
      "op": "itob",
      "defined_out": [
        "milestone_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0"
      ]
    },
    "2187": {
      "op": "frame_dig -2",
      "defined_out": [
        "milestone_id#0",
        "target_amount#0 (copy)",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0",
        "target_amount#0 (copy)"
      ]
    },
    "2189": {
      "op": "itob",
      "defined_out": [
        "milestone_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0"
      ]
    },
    "2190": {
      "op": "frame_dig -1",
      "defined_out": [
        "description#0 (copy)",
        "milestone_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0",
        "description#0 (copy)"
      ]
    },
    "2192": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "milestone_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0",
        "length%0#0"
      ]
    },
    "2193": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "milestone_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0",
        "as_bytes%0#0"
      ]
    },
    "2194": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "milestone_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0",
        "length_uint16%0#0"
      ]
    },
    "2197": {
      "op": "frame_dig -1",
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0",
        "length_uint16%0#0",
        "description#0 (copy)"
      ]
    },
    "2199": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "milestone_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0",
        "encoded_value%0#0"
      ]
    },
    "2200": {
      "op": "dig 2",
      "defined_out": [
        "encoded_value%0#0",
        "milestone_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "2202": {
      "op": "uncover 5",
      "stack_out": [
        "milestone_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0 (copy)",
        "val_as_bytes%0#0"
      ]
    },
    "2204": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "milestone_id#0",
        "val_as_bytes%1#0",
        "val_as_bytes%3#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2205": {
      "op": "uncover 2",
      "stack_out": [
        "milestone_id#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "2207": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "milestone_id#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2208": {
      "op": "pushbytes 0x002a",
      "defined_out": [
        "0x002a",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "milestone_id#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%3#0",
        "0x002a"
      ]
    },
    "2212": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "milestone_id#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2213": {
      "op": "bytec 5 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "milestone_id#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%4#0",
        "0x0000000000000000"
      ]
    },
    "2215": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "milestone_id#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2216": {
      "op": "bytec 5 // 0x0000000000000000",
      "stack_out": [
        "milestone_id#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%5#0",
        "0x0000000000000000"
      ]
    },
    "2218": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_value%0#0",
        "milestone_id#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "milestone_id#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2219": {
      "op": "swap",
      "stack_out": [
        "milestone_id#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "encoded_value%0#0"
      ]
    },
    "2220": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "milestone_id#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "milestone_id#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2221": {
      "op": "bytec 13 // \"milestones\"",
      "defined_out": [
        "\"milestones\"",
        "encoded_tuple_buffer%7#0",
        "milestone_id#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "milestone_id#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0",
        "\"milestones\""
      ]
    },
    "2223": {
      "op": "uncover 2",
      "stack_out": [
        "milestone_id#0",
        "encoded_tuple_buffer%7#0",
        "\"milestones\"",
        "val_as_bytes%1#0"
      ]
    },
    "2225": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_tuple_buffer%7#0",
        "milestone_id#0"
      ],
      "stack_out": [
        "milestone_id#0",
        "encoded_tuple_buffer%7#0",
        "box_prefixed_key%1#0"
      ]
    },
    "2226": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)",
        "encoded_tuple_buffer%7#0",
        "milestone_id#0"
      ],
      "stack_out": [
        "milestone_id#0",
        "encoded_tuple_buffer%7#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)"
      ]
    },
    "2227": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_tuple_buffer%7#0",
        "milestone_id#0",
        "{box_del}"
      ],
      "stack_out": [
        "milestone_id#0",
        "encoded_tuple_buffer%7#0",
        "box_prefixed_key%1#0",
        "{box_del}"
      ]
    },
    "2228": {
      "op": "pop",
      "stack_out": [
        "milestone_id#0",
        "encoded_tuple_buffer%7#0",
        "box_prefixed_key%1#0"
      ]
    },
    "2229": {
      "op": "swap",
      "stack_out": [
        "milestone_id#0",
        "box_prefixed_key%1#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2230": {
      "op": "box_put",
      "stack_out": [
        "milestone_id#0"
      ]
    },
    "2231": {
      "retsub": true,
      "op": "retsub"
    },
    "2232": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.complete_milestone",
      "params": {
        "milestone_id#0": "uint64",
        "proof#0": "bytes"
      },
      "block": "complete_milestone",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "2235": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2236": {
      "op": "bytec_2 // \"milestone_counter\"",
      "defined_out": [
        "\"milestone_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"milestone_counter\""
      ]
    },
    "2237": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2238": {
      "error": "check self.milestone_counter exists",
      "op": "assert // check self.milestone_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2239": {
      "op": "frame_dig -2",
      "defined_out": [
        "maybe_value%0#0",
        "milestone_id#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "milestone_id#0 (copy)"
      ]
    },
    "2241": {
      "op": ">=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2242": {
      "error": "Milestone ID out of range",
      "op": "assert // Milestone ID out of range",
      "stack_out": []
    },
    "2243": {
      "op": "frame_dig -2",
      "stack_out": [
        "milestone_id#0 (copy)"
      ]
    },
    "2245": {
      "error": "Milestone ID cannot be zero",
      "op": "assert // Milestone ID cannot be zero",
      "stack_out": []
    },
    "2246": {
      "op": "frame_dig -2",
      "stack_out": [
        "milestone_id#0 (copy)"
      ]
    },
    "2248": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "2249": {
      "op": "bytec 13 // \"milestones\"",
      "defined_out": [
        "\"milestones\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"milestones\""
      ]
    },
    "2251": {
      "op": "swap",
      "stack_out": [
        "\"milestones\"",
        "val_as_bytes%0#0"
      ]
    },
    "2252": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2253": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2254": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2255": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2257": {
      "error": "Milestone not found",
      "op": "assert // Milestone not found",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2258": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2259": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%2#0",
        "milestone_info#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "milestone_info#0",
        "maybe_exists%2#0"
      ]
    },
    "2260": {
      "error": "check self.milestones entry exists",
      "op": "assert // check self.milestones entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "milestone_info#0"
      ]
    },
    "2261": {
      "op": "bytec 11 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "box_prefixed_key%0#0",
        "milestone_info#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "milestone_info#0",
        "0x0000000000000001"
      ]
    },
    "2263": {
      "op": "replace2 26",
      "stack_out": [
        "box_prefixed_key%0#0",
        "milestone_info#0"
      ]
    },
    "2265": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "milestone_info#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2267": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "milestone_info#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "milestone_info#0",
        "{box_del}"
      ]
    },
    "2268": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "milestone_info#0"
      ]
    },
    "2269": {
      "op": "box_put",
      "stack_out": []
    },
    "2270": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2271": {
      "op": "bytec 9 // \"total_milestones_completed\"",
      "defined_out": [
        "\"total_milestones_completed\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_milestones_completed\""
      ]
    },
    "2273": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "2274": {
      "error": "check self.total_milestones_completed exists",
      "op": "assert // check self.total_milestones_completed exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "2275": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "1"
      ]
    },
    "2276": {
      "op": "+",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "2277": {
      "op": "bytec 9 // \"total_milestones_completed\"",
      "stack_out": [
        "materialized_values%0#0",
        "\"total_milestones_completed\""
      ]
    },
    "2279": {
      "op": "swap",
      "stack_out": [
        "\"total_milestones_completed\"",
        "materialized_values%0#0"
      ]
    },
    "2280": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2281": {
      "op": "pushbytes \"Milestone completed with proof: \"",
      "defined_out": [
        "\"Milestone completed with proof: \""
      ],
      "stack_out": [
        "\"Milestone completed with proof: \""
      ]
    },
    "2315": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"Milestone completed with proof: \"",
        "proof#0 (copy)"
      ],
      "stack_out": [
        "\"Milestone completed with proof: \"",
        "proof#0 (copy)"
      ]
    },
    "2317": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2318": {
      "retsub": true,
      "op": "retsub"
    },
    "2319": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.release_milestone_funds",
      "params": {
        "milestone_id#0": "uint64",
        "recipient#0": "bytes",
        "amount#0": "uint64"
      },
      "block": "release_milestone_funds",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "2322": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2323": {
      "op": "bytec_2 // \"milestone_counter\"",
      "defined_out": [
        "\"milestone_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"milestone_counter\""
      ]
    },
    "2324": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2325": {
      "error": "check self.milestone_counter exists",
      "op": "assert // check self.milestone_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2326": {
      "op": "frame_dig -3",
      "defined_out": [
        "maybe_value%0#0",
        "milestone_id#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "milestone_id#0 (copy)"
      ]
    },
    "2328": {
      "op": ">=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2329": {
      "error": "Milestone ID out of range",
      "op": "assert // Milestone ID out of range",
      "stack_out": []
    },
    "2330": {
      "op": "frame_dig -3",
      "stack_out": [
        "milestone_id#0 (copy)"
      ]
    },
    "2332": {
      "error": "Milestone ID cannot be zero",
      "op": "assert // Milestone ID cannot be zero",
      "stack_out": []
    },
    "2333": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "2335": {
      "error": "Amount must be greater than zero",
      "op": "assert // Amount must be greater than zero",
      "stack_out": []
    },
    "2336": {
      "op": "itxn_begin"
    },
    "2337": {
      "op": "global MinTxnFee",
      "defined_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "2339": {
      "op": "frame_dig -1",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "amount#0 (copy)"
      ]
    },
    "2341": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "2343": {
      "op": "frame_dig -2",
      "defined_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "recipient#0 (copy)"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "recipient#0 (copy)"
      ]
    },
    "2345": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "2347": {
      "op": "intc_1 // pay",
      "defined_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "pay"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "pay"
      ]
    },
    "2348": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "2350": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2352": {
      "op": "itxn_submit"
    },
    "2353": {
      "op": "pushbytes \"Real blockchain payment sent for milestone\"",
      "defined_out": [
        "\"Real blockchain payment sent for milestone\""
      ],
      "stack_out": [
        "\"Real blockchain payment sent for milestone\""
      ]
    },
    "2397": {
      "retsub": true,
      "op": "retsub"
    },
    "2398": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_campaign_details",
      "params": {
        "campaign_id#0": "bytes"
      },
      "block": "get_campaign_details",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2401": {
      "op": "bytec 10 // \"campaigns\"",
      "defined_out": [
        "\"campaigns\""
      ],
      "stack_out": [
        "\"campaigns\""
      ]
    },
    "2403": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"campaigns\"",
        "campaign_id#0 (copy)"
      ],
      "stack_out": [
        "\"campaigns\"",
        "campaign_id#0 (copy)"
      ]
    },
    "2405": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2406": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2407": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2408": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2410": {
      "error": "Campaign not found",
      "op": "assert // Campaign not found",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2411": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2412": {
      "error": "check self.campaigns entry exists",
      "op": "assert // check self.campaigns entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2413": {
      "retsub": true,
      "op": "retsub"
    },
    "2414": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_organization_details",
      "params": {
        "org_id#0": "bytes"
      },
      "block": "get_organization_details",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2417": {
      "op": "bytec 15 // \"orgs\"",
      "defined_out": [
        "\"orgs\""
      ],
      "stack_out": [
        "\"orgs\""
      ]
    },
    "2419": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"orgs\"",
        "org_id#0 (copy)"
      ],
      "stack_out": [
        "\"orgs\"",
        "org_id#0 (copy)"
      ]
    },
    "2421": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2422": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2423": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2424": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2426": {
      "error": "Organization not found",
      "op": "assert // Organization not found",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2427": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2428": {
      "error": "check self.organizations entry exists",
      "op": "assert // check self.organizations entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2429": {
      "retsub": true,
      "op": "retsub"
    },
    "2430": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_voucher_details",
      "params": {
        "voucher_id#0": "bytes"
      },
      "block": "get_voucher_details",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2433": {
      "op": "bytec 16 // \"vouchers\"",
      "defined_out": [
        "\"vouchers\""
      ],
      "stack_out": [
        "\"vouchers\""
      ]
    },
    "2435": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"vouchers\"",
        "voucher_id#0 (copy)"
      ],
      "stack_out": [
        "\"vouchers\"",
        "voucher_id#0 (copy)"
      ]
    },
    "2437": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2438": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2439": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2440": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2442": {
      "error": "Voucher not found",
      "op": "assert // Voucher not found",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2443": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2444": {
      "error": "check self.vouchers entry exists",
      "op": "assert // check self.vouchers entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2445": {
      "retsub": true,
      "op": "retsub"
    },
    "2446": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_milestone_details",
      "params": {
        "milestone_id#0": "bytes"
      },
      "block": "get_milestone_details",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2449": {
      "op": "bytec 13 // \"milestones\"",
      "defined_out": [
        "\"milestones\""
      ],
      "stack_out": [
        "\"milestones\""
      ]
    },
    "2451": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"milestones\"",
        "milestone_id#0 (copy)"
      ],
      "stack_out": [
        "\"milestones\"",
        "milestone_id#0 (copy)"
      ]
    },
    "2453": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2454": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2455": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2456": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2458": {
      "error": "Milestone not found",
      "op": "assert // Milestone not found",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2459": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2460": {
      "error": "check self.milestones entry exists",
      "op": "assert // check self.milestones entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2461": {
      "retsub": true,
      "op": "retsub"
    },
    "2462": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_delivery_details",
      "params": {
        "delivery_id#0": "bytes"
      },
      "block": "get_delivery_details",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2465": {
      "op": "bytec 12 // \"deliveries\"",
      "defined_out": [
        "\"deliveries\""
      ],
      "stack_out": [
        "\"deliveries\""
      ]
    },
    "2467": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"deliveries\"",
        "delivery_id#0 (copy)"
      ],
      "stack_out": [
        "\"deliveries\"",
        "delivery_id#0 (copy)"
      ]
    },
    "2469": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2470": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2471": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2472": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2474": {
      "error": "Delivery not found",
      "op": "assert // Delivery not found",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2475": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2476": {
      "error": "check self.deliveries entry exists",
      "op": "assert // check self.deliveries entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2477": {
      "retsub": true,
      "op": "retsub"
    },
    "2478": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_milestone_count",
      "params": {},
      "block": "get_milestone_count",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2479": {
      "op": "bytec_2 // \"milestone_counter\"",
      "defined_out": [
        "\"milestone_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"milestone_counter\""
      ]
    },
    "2480": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2481": {
      "error": "check self.milestone_counter exists",
      "op": "assert // check self.milestone_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2482": {
      "retsub": true,
      "op": "retsub"
    },
    "2483": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_voucher_count",
      "params": {},
      "block": "get_voucher_count",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2484": {
      "op": "bytec 4 // \"voucher_counter\"",
      "defined_out": [
        "\"voucher_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"voucher_counter\""
      ]
    },
    "2486": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2487": {
      "error": "check self.voucher_counter exists",
      "op": "assert // check self.voucher_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2488": {
      "retsub": true,
      "op": "retsub"
    },
    "2489": {
      "subroutine": "smart_contracts.aidchain_contracts.contract.AidchainContracts.get_delivery_count",
      "params": {},
      "block": "get_delivery_count",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2490": {
      "op": "bytec_3 // \"delivery_counter\"",
      "defined_out": [
        "\"delivery_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"delivery_counter\""
      ]
    },
    "2491": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2492": {
      "error": "check self.delivery_counter exists",
      "op": "assert // check self.delivery_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2493": {
      "retsub": true,
      "op": "retsub"
    }
  }
}